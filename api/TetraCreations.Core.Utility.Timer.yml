### YamlMime:ManagedReference
items:
- uid: TetraCreations.Core.Utility.Timer
  commentId: T:TetraCreations.Core.Utility.Timer
  id: Timer
  parent: TetraCreations.Core.Utility
  children:
  - TetraCreations.Core.Utility.Timer._initialTime
  - TetraCreations.Core.Utility.Timer._loop
  - TetraCreations.Core.Utility.Timer._previousTimeInSeconds
  - TetraCreations.Core.Utility.Timer._resetOnStop
  - TetraCreations.Core.Utility.Timer._time
  - TetraCreations.Core.Utility.Timer._timeFormat
  - TetraCreations.Core.Utility.Timer.#ctor(System.Single,System.Boolean,System.Boolean,System.String)
  - TetraCreations.Core.Utility.Timer.InitialTime
  - TetraCreations.Core.Utility.Timer.InitialTimeAsString
  - TetraCreations.Core.Utility.Timer.IsDone
  - TetraCreations.Core.Utility.Timer.IsRunning
  - TetraCreations.Core.Utility.Timer.Loop
  - TetraCreations.Core.Utility.Timer.OnSecondElapsed
  - TetraCreations.Core.Utility.Timer.OnTimerLooped
  - TetraCreations.Core.Utility.Timer.OnTimerStart
  - TetraCreations.Core.Utility.Timer.OnTimerStop
  - TetraCreations.Core.Utility.Timer.Pause
  - TetraCreations.Core.Utility.Timer.Progress
  - TetraCreations.Core.Utility.Timer.Reset
  - TetraCreations.Core.Utility.Timer.ResetOnStop
  - TetraCreations.Core.Utility.Timer.Resume
  - TetraCreations.Core.Utility.Timer.SetInitialTime(System.Single)
  - TetraCreations.Core.Utility.Timer.Start
  - TetraCreations.Core.Utility.Timer.Stop
  - TetraCreations.Core.Utility.Timer.Tick(System.Single)
  - TetraCreations.Core.Utility.Timer.Time
  - TetraCreations.Core.Utility.Timer.TimeAsString
  - TetraCreations.Core.Utility.Timer.TimeFormat
  - TetraCreations.Core.Utility.Timer.TimeInSeconds
  - TetraCreations.Core.Utility.Timer.ToString
  langs:
  - csharp
  - vb
  name: Timer
  nameWithType: Timer
  fullName: TetraCreations.Core.Utility.Timer
  type: Class
  source:
    id: Timer
    path: ''
    startLine: 39203
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nUsed to increment the time until it reach the initial time passed in the constructor. <br />\nThen the Timer either stops or it loop until we call the Stop() method.  <br />\nSee TimerManager to start a new timer.\n"
  example: []
  syntax:
    content: public class Timer
    content.vb: Public Class Timer
  inheritance:
  - System.Object
  derivedClasses:
  - TetraCreations.Core.Utility.CountdownTimer
- uid: TetraCreations.Core.Utility.Timer._timeFormat
  commentId: F:TetraCreations.Core.Utility.Timer._timeFormat
  id: _timeFormat
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: _timeFormat
  nameWithType: Timer._timeFormat
  fullName: TetraCreations.Core.Utility.Timer._timeFormat
  type: Field
  source:
    id: _timeFormat
    path: ''
    startLine: 39206
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: protected string _timeFormat
    return:
      type: System.String
    content.vb: Protected _timeFormat As String
- uid: TetraCreations.Core.Utility.Timer._resetOnStop
  commentId: F:TetraCreations.Core.Utility.Timer._resetOnStop
  id: _resetOnStop
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: _resetOnStop
  nameWithType: Timer._resetOnStop
  fullName: TetraCreations.Core.Utility.Timer._resetOnStop
  type: Field
  source:
    id: _resetOnStop
    path: ''
    startLine: 39207
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: protected bool _resetOnStop
    return:
      type: System.Boolean
    content.vb: Protected _resetOnStop As Boolean
- uid: TetraCreations.Core.Utility.Timer._loop
  commentId: F:TetraCreations.Core.Utility.Timer._loop
  id: _loop
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: _loop
  nameWithType: Timer._loop
  fullName: TetraCreations.Core.Utility.Timer._loop
  type: Field
  source:
    id: _loop
    path: ''
    startLine: 39208
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: protected bool _loop
    return:
      type: System.Boolean
    content.vb: Protected _loop As Boolean
- uid: TetraCreations.Core.Utility.Timer._time
  commentId: F:TetraCreations.Core.Utility.Timer._time
  id: _time
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: _time
  nameWithType: Timer._time
  fullName: TetraCreations.Core.Utility.Timer._time
  type: Field
  source:
    id: _time
    path: ''
    startLine: 39209
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: protected float _time
    return:
      type: System.Single
    content.vb: Protected _time As Single
- uid: TetraCreations.Core.Utility.Timer._initialTime
  commentId: F:TetraCreations.Core.Utility.Timer._initialTime
  id: _initialTime
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: _initialTime
  nameWithType: Timer._initialTime
  fullName: TetraCreations.Core.Utility.Timer._initialTime
  type: Field
  source:
    id: _initialTime
    path: ''
    startLine: 39210
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: protected float _initialTime
    return:
      type: System.Single
    content.vb: Protected _initialTime As Single
- uid: TetraCreations.Core.Utility.Timer._previousTimeInSeconds
  commentId: F:TetraCreations.Core.Utility.Timer._previousTimeInSeconds
  id: _previousTimeInSeconds
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: _previousTimeInSeconds
  nameWithType: Timer._previousTimeInSeconds
  fullName: TetraCreations.Core.Utility.Timer._previousTimeInSeconds
  type: Field
  source:
    id: _previousTimeInSeconds
    path: ''
    startLine: 39212
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: protected int _previousTimeInSeconds
    return:
      type: System.Int32
    content.vb: Protected _previousTimeInSeconds As Integer
- uid: TetraCreations.Core.Utility.Timer.TimeFormat
  commentId: P:TetraCreations.Core.Utility.Timer.TimeFormat
  id: TimeFormat
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: TimeFormat
  nameWithType: Timer.TimeFormat
  fullName: TetraCreations.Core.Utility.Timer.TimeFormat
  type: Property
  source:
    id: TimeFormat
    path: ''
    startLine: 39217
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nThe string format used to display the time\n"
  example: []
  syntax:
    content: public string TimeFormat { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TimeFormat As String
  overload: TetraCreations.Core.Utility.Timer.TimeFormat*
- uid: TetraCreations.Core.Utility.Timer.ResetOnStop
  commentId: P:TetraCreations.Core.Utility.Timer.ResetOnStop
  id: ResetOnStop
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: ResetOnStop
  nameWithType: Timer.ResetOnStop
  fullName: TetraCreations.Core.Utility.Timer.ResetOnStop
  type: Property
  source:
    id: ResetOnStop
    path: ''
    startLine: 39222
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nSet the Time to the InitialTime when the timer stops.\n"
  example: []
  syntax:
    content: public bool ResetOnStop { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ResetOnStop As Boolean
  overload: TetraCreations.Core.Utility.Timer.ResetOnStop*
- uid: TetraCreations.Core.Utility.Timer.Loop
  commentId: P:TetraCreations.Core.Utility.Timer.Loop
  id: Loop
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: Loop
  nameWithType: Timer.Loop
  fullName: TetraCreations.Core.Utility.Timer.Loop
  type: Property
  source:
    id: Loop
    path: ''
    startLine: 39227
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nDetermines if the timer will Tick then Reset unless we manually call Stop()\n"
  example: []
  syntax:
    content: public bool Loop { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property [Loop] As Boolean
  overload: TetraCreations.Core.Utility.Timer.Loop*
- uid: TetraCreations.Core.Utility.Timer.Time
  commentId: P:TetraCreations.Core.Utility.Timer.Time
  id: Time
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: Timer.Time
  fullName: TetraCreations.Core.Utility.Timer.Time
  type: Property
  source:
    id: Time
    path: ''
    startLine: 39232
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nThe current time in seconds as float\n"
  example: []
  syntax:
    content: public float Time { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Time As Single
  overload: TetraCreations.Core.Utility.Timer.Time*
- uid: TetraCreations.Core.Utility.Timer.InitialTime
  commentId: P:TetraCreations.Core.Utility.Timer.InitialTime
  id: InitialTime
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: InitialTime
  nameWithType: Timer.InitialTime
  fullName: TetraCreations.Core.Utility.Timer.InitialTime
  type: Property
  source:
    id: InitialTime
    path: ''
    startLine: 39237
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nThe Time when the timer was instancied.\n"
  example: []
  syntax:
    content: public float InitialTime { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property InitialTime As Single
  overload: TetraCreations.Core.Utility.Timer.InitialTime*
- uid: TetraCreations.Core.Utility.Timer.TimeInSeconds
  commentId: P:TetraCreations.Core.Utility.Timer.TimeInSeconds
  id: TimeInSeconds
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: TimeInSeconds
  nameWithType: Timer.TimeInSeconds
  fullName: TetraCreations.Core.Utility.Timer.TimeInSeconds
  type: Property
  source:
    id: TimeInSeconds
    path: ''
    startLine: 39242
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nThe current time in seconds as integer, it can be useful to display the remaining time in the UI.\n"
  example: []
  syntax:
    content: public int TimeInSeconds { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TimeInSeconds As Integer
  overload: TetraCreations.Core.Utility.Timer.TimeInSeconds*
- uid: TetraCreations.Core.Utility.Timer.IsRunning
  commentId: P:TetraCreations.Core.Utility.Timer.IsRunning
  id: IsRunning
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: IsRunning
  nameWithType: Timer.IsRunning
  fullName: TetraCreations.Core.Utility.Timer.IsRunning
  type: Property
  source:
    id: IsRunning
    path: ''
    startLine: 39247
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nIndicates if the Timer has been started \n"
  example: []
  syntax:
    content: public bool IsRunning { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsRunning As Boolean
  overload: TetraCreations.Core.Utility.Timer.IsRunning*
- uid: TetraCreations.Core.Utility.Timer.Progress
  commentId: P:TetraCreations.Core.Utility.Timer.Progress
  id: Progress
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: Timer.Progress
  fullName: TetraCreations.Core.Utility.Timer.Progress
  type: Property
  source:
    id: Progress
    path: ''
    startLine: 39252
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nReturns the timer current progression until it is finished\n"
  example: []
  syntax:
    content: public virtual float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Overridable ReadOnly Property Progress As Single
  overload: TetraCreations.Core.Utility.Timer.Progress*
- uid: TetraCreations.Core.Utility.Timer.IsDone
  commentId: P:TetraCreations.Core.Utility.Timer.IsDone
  id: IsDone
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: IsDone
  nameWithType: Timer.IsDone
  fullName: TetraCreations.Core.Utility.Timer.IsDone
  type: Property
  source:
    id: IsDone
    path: ''
    startLine: 39262
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public virtual bool IsDone { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsDone As Boolean
  overload: TetraCreations.Core.Utility.Timer.IsDone*
- uid: TetraCreations.Core.Utility.Timer.TimeAsString
  commentId: P:TetraCreations.Core.Utility.Timer.TimeAsString
  id: TimeAsString
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: TimeAsString
  nameWithType: Timer.TimeAsString
  fullName: TetraCreations.Core.Utility.Timer.TimeAsString
  type: Property
  source:
    id: TimeAsString
    path: ''
    startLine: 39263
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public virtual string TimeAsString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property TimeAsString As String
  overload: TetraCreations.Core.Utility.Timer.TimeAsString*
- uid: TetraCreations.Core.Utility.Timer.InitialTimeAsString
  commentId: P:TetraCreations.Core.Utility.Timer.InitialTimeAsString
  id: InitialTimeAsString
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: InitialTimeAsString
  nameWithType: Timer.InitialTimeAsString
  fullName: TetraCreations.Core.Utility.Timer.InitialTimeAsString
  type: Property
  source:
    id: InitialTimeAsString
    path: ''
    startLine: 39264
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public virtual string InitialTimeAsString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property InitialTimeAsString As String
  overload: TetraCreations.Core.Utility.Timer.InitialTimeAsString*
- uid: TetraCreations.Core.Utility.Timer.OnTimerStart
  commentId: F:TetraCreations.Core.Utility.Timer.OnTimerStart
  id: OnTimerStart
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: OnTimerStart
  nameWithType: Timer.OnTimerStart
  fullName: TetraCreations.Core.Utility.Timer.OnTimerStart
  type: Field
  source:
    id: OnTimerStart
    path: ''
    startLine: 39269
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nInvoked when the Timer starts\n"
  example: []
  syntax:
    content: public Action OnTimerStart
    return:
      type: Global.Action
    content.vb: Public OnTimerStart As Action
- uid: TetraCreations.Core.Utility.Timer.OnTimerStop
  commentId: F:TetraCreations.Core.Utility.Timer.OnTimerStop
  id: OnTimerStop
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: OnTimerStop
  nameWithType: Timer.OnTimerStop
  fullName: TetraCreations.Core.Utility.Timer.OnTimerStop
  type: Field
  source:
    id: OnTimerStop
    path: ''
    startLine: 39274
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nInvoked when the Timer stops\n"
  example: []
  syntax:
    content: public Action OnTimerStop
    return:
      type: Global.Action
    content.vb: Public OnTimerStop As Action
- uid: TetraCreations.Core.Utility.Timer.OnSecondElapsed
  commentId: F:TetraCreations.Core.Utility.Timer.OnSecondElapsed
  id: OnSecondElapsed
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: OnSecondElapsed
  nameWithType: Timer.OnSecondElapsed
  fullName: TetraCreations.Core.Utility.Timer.OnSecondElapsed
  type: Field
  source:
    id: OnSecondElapsed
    path: ''
    startLine: 39279
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nOccurs every second.\n"
  example: []
  syntax:
    content: public Action OnSecondElapsed
    return:
      type: Global.Action
    content.vb: Public OnSecondElapsed As Action
- uid: TetraCreations.Core.Utility.Timer.OnTimerLooped
  commentId: F:TetraCreations.Core.Utility.Timer.OnTimerLooped
  id: OnTimerLooped
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: OnTimerLooped
  nameWithType: Timer.OnTimerLooped
  fullName: TetraCreations.Core.Utility.Timer.OnTimerLooped
  type: Field
  source:
    id: OnTimerLooped
    path: ''
    startLine: 39284
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nInvoked when the Timer looped\n"
  example: []
  syntax:
    content: public Action OnTimerLooped
    return:
      type: Global.Action
    content.vb: Public OnTimerLooped As Action
- uid: TetraCreations.Core.Utility.Timer.#ctor(System.Single,System.Boolean,System.Boolean,System.String)
  commentId: M:TetraCreations.Core.Utility.Timer.#ctor(System.Single,System.Boolean,System.Boolean,System.String)
  id: '#ctor(System.Single,System.Boolean,System.Boolean,System.String)'
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: Timer(float, bool, bool, string)
  nameWithType: Timer.Timer(float, bool, bool, string)
  fullName: TetraCreations.Core.Utility.Timer.Timer(float, bool, bool, string)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 39293
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nCreate a new timer ready to be started\n"
  example: []
  syntax:
    content: public Timer(float initialTime, bool resetOnStop = true, bool loop = false, string timeFormat = "F1")
    parameters:
    - id: initialTime
      type: System.Single
      description: Time to reach before it stops.
    - id: resetOnStop
      type: System.Boolean
      description: Determines if we reset the Time to the initial time when the timer stops.
    - id: loop
      type: System.Boolean
      description: Determines if the timer will Tick then Reset unless we manually call Stop()
    - id: timeFormat
      type: System.String
      description: How do we format the Time and the Initial time as strings.
    content.vb: Public Sub New(initialTime As Single, resetOnStop As Boolean = True, [loop] As Boolean = False, timeFormat As String = "F1")
  overload: TetraCreations.Core.Utility.Timer.#ctor*
  nameWithType.vb: Timer.New(Single, Boolean, Boolean, String)
  fullName.vb: TetraCreations.Core.Utility.Timer.New(Single, Boolean, Boolean, String)
  name.vb: New(Single, Boolean, Boolean, String)
- uid: TetraCreations.Core.Utility.Timer.Start
  commentId: M:TetraCreations.Core.Utility.Timer.Start
  id: Start
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: Timer.Start()
  fullName: TetraCreations.Core.Utility.Timer.Start()
  type: Method
  source:
    id: Start
    path: ''
    startLine: 39305
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nStart the timer with it&apos;s initial time, invoke OnTimerStart\n"
  example: []
  syntax:
    content: public virtual void Start()
    content.vb: Public Overridable Sub Start()
  overload: TetraCreations.Core.Utility.Timer.Start*
- uid: TetraCreations.Core.Utility.Timer.Stop
  commentId: M:TetraCreations.Core.Utility.Timer.Stop
  id: Stop
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: Timer.Stop()
  fullName: TetraCreations.Core.Utility.Timer.Stop()
  type: Method
  source:
    id: Stop
    path: ''
    startLine: 39319
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nStop the timer, invoke OnTimerStop\n"
  example: []
  syntax:
    content: public virtual void Stop()
    content.vb: Public Overridable Sub [Stop]()
  overload: TetraCreations.Core.Utility.Timer.Stop*
- uid: TetraCreations.Core.Utility.Timer.Resume
  commentId: M:TetraCreations.Core.Utility.Timer.Resume
  id: Resume
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: Resume()
  nameWithType: Timer.Resume()
  fullName: TetraCreations.Core.Utility.Timer.Resume()
  type: Method
  source:
    id: Resume
    path: ''
    startLine: 39332
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nUnpause the timer\n"
  example: []
  syntax:
    content: public virtual void Resume()
    content.vb: Public Overridable Sub [Resume]()
  overload: TetraCreations.Core.Utility.Timer.Resume*
- uid: TetraCreations.Core.Utility.Timer.Pause
  commentId: M:TetraCreations.Core.Utility.Timer.Pause
  id: Pause
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: Pause()
  nameWithType: Timer.Pause()
  fullName: TetraCreations.Core.Utility.Timer.Pause()
  type: Method
  source:
    id: Pause
    path: ''
    startLine: 39340
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nPause the timer\n"
  example: []
  syntax:
    content: public virtual void Pause()
    content.vb: Public Overridable Sub Pause()
  overload: TetraCreations.Core.Utility.Timer.Pause*
- uid: TetraCreations.Core.Utility.Timer.Tick(System.Single)
  commentId: M:TetraCreations.Core.Utility.Timer.Tick(System.Single)
  id: Tick(System.Single)
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: Tick(float)
  nameWithType: Timer.Tick(float)
  fullName: TetraCreations.Core.Utility.Timer.Tick(float)
  type: Method
  source:
    id: Tick
    path: ''
    startLine: 39349
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nUpdate the current time, inside an Update method\n"
  example: []
  syntax:
    content: public virtual void Tick(float deltaTime)
    parameters:
    - id: deltaTime
      type: System.Single
      description: ''
    content.vb: Public Overridable Sub Tick(deltaTime As Single)
  overload: TetraCreations.Core.Utility.Timer.Tick*
  nameWithType.vb: Timer.Tick(Single)
  fullName.vb: TetraCreations.Core.Utility.Timer.Tick(Single)
  name.vb: Tick(Single)
- uid: TetraCreations.Core.Utility.Timer.Reset
  commentId: M:TetraCreations.Core.Utility.Timer.Reset
  id: Reset
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Timer.Reset()
  fullName: TetraCreations.Core.Utility.Timer.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 39377
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nSet the time to 0f\n"
  example: []
  syntax:
    content: public virtual void Reset()
    content.vb: Public Overridable Sub Reset()
  overload: TetraCreations.Core.Utility.Timer.Reset*
- uid: TetraCreations.Core.Utility.Timer.SetInitialTime(System.Single)
  commentId: M:TetraCreations.Core.Utility.Timer.SetInitialTime(System.Single)
  id: SetInitialTime(System.Single)
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: SetInitialTime(float)
  nameWithType: Timer.SetInitialTime(float)
  fullName: TetraCreations.Core.Utility.Timer.SetInitialTime(float)
  type: Method
  source:
    id: SetInitialTime
    path: ''
    startLine: 39386
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nSet the initial time then reset the timer.\n"
  example: []
  syntax:
    content: public virtual void SetInitialTime(float time)
    parameters:
    - id: time
      type: System.Single
      description: ''
    content.vb: Public Overridable Sub SetInitialTime(time As Single)
  overload: TetraCreations.Core.Utility.Timer.SetInitialTime*
  nameWithType.vb: Timer.SetInitialTime(Single)
  fullName.vb: TetraCreations.Core.Utility.Timer.SetInitialTime(Single)
  name.vb: SetInitialTime(Single)
- uid: TetraCreations.Core.Utility.Timer.ToString
  commentId: M:TetraCreations.Core.Utility.Timer.ToString
  id: ToString
  parent: TetraCreations.Core.Utility.Timer
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Timer.ToString()
  fullName: TetraCreations.Core.Utility.Timer.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 39396
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nReturns a string representing the current time elapsed for example &quot;2/5&quot;.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: TetraCreations.Core.Utility.Timer.ToString*
references:
- uid: TetraCreations.Core.Utility
  commentId: N:TetraCreations.Core.Utility
  name: TetraCreations.Core.Utility
  nameWithType: TetraCreations.Core.Utility
  fullName: TetraCreations.Core.Utility
  spec.csharp:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
  - name: .
  - uid: TetraCreations.Core.Utility
    name: Utility
  spec.vb:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
  - name: .
  - uid: TetraCreations.Core.Utility
    name: Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TetraCreations.Core.Utility.Timer.TimeFormat*
  commentId: Overload:TetraCreations.Core.Utility.Timer.TimeFormat
  name: TimeFormat
  nameWithType: Timer.TimeFormat
  fullName: TetraCreations.Core.Utility.Timer.TimeFormat
- uid: TetraCreations.Core.Utility.Timer.ResetOnStop*
  commentId: Overload:TetraCreations.Core.Utility.Timer.ResetOnStop
  name: ResetOnStop
  nameWithType: Timer.ResetOnStop
  fullName: TetraCreations.Core.Utility.Timer.ResetOnStop
- uid: TetraCreations.Core.Utility.Timer.Loop*
  commentId: Overload:TetraCreations.Core.Utility.Timer.Loop
  name: Loop
  nameWithType: Timer.Loop
  fullName: TetraCreations.Core.Utility.Timer.Loop
- uid: TetraCreations.Core.Utility.Timer.Time*
  commentId: Overload:TetraCreations.Core.Utility.Timer.Time
  name: Time
  nameWithType: Timer.Time
  fullName: TetraCreations.Core.Utility.Timer.Time
- uid: TetraCreations.Core.Utility.Timer.InitialTime*
  commentId: Overload:TetraCreations.Core.Utility.Timer.InitialTime
  name: InitialTime
  nameWithType: Timer.InitialTime
  fullName: TetraCreations.Core.Utility.Timer.InitialTime
- uid: TetraCreations.Core.Utility.Timer.TimeInSeconds*
  commentId: Overload:TetraCreations.Core.Utility.Timer.TimeInSeconds
  name: TimeInSeconds
  nameWithType: Timer.TimeInSeconds
  fullName: TetraCreations.Core.Utility.Timer.TimeInSeconds
- uid: TetraCreations.Core.Utility.Timer.IsRunning*
  commentId: Overload:TetraCreations.Core.Utility.Timer.IsRunning
  name: IsRunning
  nameWithType: Timer.IsRunning
  fullName: TetraCreations.Core.Utility.Timer.IsRunning
- uid: TetraCreations.Core.Utility.Timer.Progress*
  commentId: Overload:TetraCreations.Core.Utility.Timer.Progress
  name: Progress
  nameWithType: Timer.Progress
  fullName: TetraCreations.Core.Utility.Timer.Progress
- uid: TetraCreations.Core.Utility.Timer.IsDone*
  commentId: Overload:TetraCreations.Core.Utility.Timer.IsDone
  name: IsDone
  nameWithType: Timer.IsDone
  fullName: TetraCreations.Core.Utility.Timer.IsDone
- uid: TetraCreations.Core.Utility.Timer.TimeAsString*
  commentId: Overload:TetraCreations.Core.Utility.Timer.TimeAsString
  name: TimeAsString
  nameWithType: Timer.TimeAsString
  fullName: TetraCreations.Core.Utility.Timer.TimeAsString
- uid: TetraCreations.Core.Utility.Timer.InitialTimeAsString*
  commentId: Overload:TetraCreations.Core.Utility.Timer.InitialTimeAsString
  name: InitialTimeAsString
  nameWithType: Timer.InitialTimeAsString
  fullName: TetraCreations.Core.Utility.Timer.InitialTimeAsString
- uid: Global.Action
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: Action
- uid: TetraCreations.Core.Utility.Timer.#ctor*
  commentId: Overload:TetraCreations.Core.Utility.Timer.#ctor
  name: Timer
  nameWithType: Timer.Timer
  fullName: TetraCreations.Core.Utility.Timer.Timer
  nameWithType.vb: Timer.New
  fullName.vb: TetraCreations.Core.Utility.Timer.New
  name.vb: New
- uid: TetraCreations.Core.Utility.Timer.Start*
  commentId: Overload:TetraCreations.Core.Utility.Timer.Start
  name: Start
  nameWithType: Timer.Start
  fullName: TetraCreations.Core.Utility.Timer.Start
- uid: TetraCreations.Core.Utility.Timer.Stop*
  commentId: Overload:TetraCreations.Core.Utility.Timer.Stop
  name: Stop
  nameWithType: Timer.Stop
  fullName: TetraCreations.Core.Utility.Timer.Stop
- uid: TetraCreations.Core.Utility.Timer.Resume*
  commentId: Overload:TetraCreations.Core.Utility.Timer.Resume
  name: Resume
  nameWithType: Timer.Resume
  fullName: TetraCreations.Core.Utility.Timer.Resume
- uid: TetraCreations.Core.Utility.Timer.Pause*
  commentId: Overload:TetraCreations.Core.Utility.Timer.Pause
  name: Pause
  nameWithType: Timer.Pause
  fullName: TetraCreations.Core.Utility.Timer.Pause
- uid: TetraCreations.Core.Utility.Timer.Tick*
  commentId: Overload:TetraCreations.Core.Utility.Timer.Tick
  name: Tick
  nameWithType: Timer.Tick
  fullName: TetraCreations.Core.Utility.Timer.Tick
- uid: TetraCreations.Core.Utility.Timer.Reset*
  commentId: Overload:TetraCreations.Core.Utility.Timer.Reset
  name: Reset
  nameWithType: Timer.Reset
  fullName: TetraCreations.Core.Utility.Timer.Reset
- uid: TetraCreations.Core.Utility.Timer.SetInitialTime*
  commentId: Overload:TetraCreations.Core.Utility.Timer.SetInitialTime
  name: SetInitialTime
  nameWithType: Timer.SetInitialTime
  fullName: TetraCreations.Core.Utility.Timer.SetInitialTime
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: TetraCreations.Core.Utility.Timer.ToString*
  commentId: Overload:TetraCreations.Core.Utility.Timer.ToString
  name: ToString
  nameWithType: Timer.ToString
  fullName: TetraCreations.Core.Utility.Timer.ToString
