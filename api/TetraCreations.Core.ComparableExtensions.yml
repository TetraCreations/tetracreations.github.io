### YamlMime:ManagedReference
items:
- uid: TetraCreations.Core.ComparableExtensions
  commentId: T:TetraCreations.Core.ComparableExtensions
  id: ComparableExtensions
  parent: TetraCreations.Core
  children:
  - TetraCreations.Core.ComparableExtensions.InRange``1(``0,``0,``0,TetraCreations.Core.MatchInclusive)
  langs:
  - csharp
  - vb
  name: ComparableExtensions
  nameWithType: ComparableExtensions
  fullName: TetraCreations.Core.ComparableExtensions
  type: Class
  source:
    id: ComparableExtensions
    path: ''
    startLine: 36645
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  syntax:
    content: public static class ComparableExtensions
    content.vb: Public Module ComparableExtensions
  inheritance:
  - System.Object
- uid: TetraCreations.Core.ComparableExtensions.InRange``1(``0,``0,``0,TetraCreations.Core.MatchInclusive)
  commentId: M:TetraCreations.Core.ComparableExtensions.InRange``1(``0,``0,``0,TetraCreations.Core.MatchInclusive)
  id: InRange``1(``0,``0,``0,TetraCreations.Core.MatchInclusive)
  isExtensionMethod: true
  parent: TetraCreations.Core.ComparableExtensions
  langs:
  - csharp
  - vb
  name: InRange<T>(T, T, T, MatchInclusive)
  nameWithType: ComparableExtensions.InRange<T>(T, T, T, MatchInclusive)
  fullName: TetraCreations.Core.ComparableExtensions.InRange<T>(T, T, T, TetraCreations.Core.MatchInclusive)
  type: Method
  source:
    id: InRange
    path: ''
    startLine: 36657
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nChecks if a value is in between a specific range, by default both lower and upper limit are inclusive.<br />\nFor example 10.InRange(0,10) will return true but 10.InRange(0,10, MatchInclusive.Lower) will return false.\n"
  example: []
  syntax:
    content: 'public static bool InRange<T>(this T actual, T lower, T upper, MatchInclusive matchInclusive = MatchInclusive.Both) where T : IComparable<T>'
    parameters:
    - id: actual
      type: '{T}'
      description: ''
    - id: lower
      type: '{T}'
      description: ''
    - id: upper
      type: '{T}'
      description: ''
    - id: matchInclusive
      type: TetraCreations.Core.MatchInclusive
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function InRange(Of T As IComparable(Of T))(actual As T, lower As T, upper As T, matchInclusive As MatchInclusive = MatchInclusive.Both) As Boolean
  overload: TetraCreations.Core.ComparableExtensions.InRange*
  nameWithType.vb: ComparableExtensions.InRange(Of T)(T, T, T, MatchInclusive)
  fullName.vb: TetraCreations.Core.ComparableExtensions.InRange(Of T)(T, T, T, TetraCreations.Core.MatchInclusive)
  name.vb: InRange(Of T)(T, T, T, MatchInclusive)
references:
- uid: TetraCreations.Core
  commentId: N:TetraCreations.Core
  name: TetraCreations.Core
  nameWithType: TetraCreations.Core
  fullName: TetraCreations.Core
  spec.csharp:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
  spec.vb:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TetraCreations.Core.ComparableExtensions.InRange*
  commentId: Overload:TetraCreations.Core.ComparableExtensions.InRange
  name: InRange
  nameWithType: ComparableExtensions.InRange
  fullName: TetraCreations.Core.ComparableExtensions.InRange
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: TetraCreations.Core.MatchInclusive
  commentId: T:TetraCreations.Core.MatchInclusive
  parent: TetraCreations.Core
  name: MatchInclusive
  nameWithType: MatchInclusive
  fullName: TetraCreations.Core.MatchInclusive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: T
  name: T
  nameWithType: T
  fullName: T
