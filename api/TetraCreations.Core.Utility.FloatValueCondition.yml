### YamlMime:ManagedReference
items:
- uid: TetraCreations.Core.Utility.FloatValueCondition
  commentId: T:TetraCreations.Core.Utility.FloatValueCondition
  id: FloatValueCondition
  parent: TetraCreations.Core.Utility
  children:
  - TetraCreations.Core.Utility.FloatValueCondition.#ctor(System.Single,System.Single,System.Boolean,System.Single)
  - TetraCreations.Core.Utility.FloatValueCondition.#ctor(System.Single,TetraCreations.Core.ConditionType,System.Boolean,System.Single)
  - TetraCreations.Core.Utility.FloatValueCondition.ConditionType
  - TetraCreations.Core.Utility.FloatValueCondition.EqualityPrecision
  - TetraCreations.Core.Utility.FloatValueCondition.Evaluate(System.Single)
  - TetraCreations.Core.Utility.FloatValueCondition.EventRaised
  - TetraCreations.Core.Utility.FloatValueCondition.IsBetween(System.Single)
  - TetraCreations.Core.Utility.FloatValueCondition.IsEquals(System.Single)
  - TetraCreations.Core.Utility.FloatValueCondition.IsGreater(System.Single)
  - TetraCreations.Core.Utility.FloatValueCondition.IsLower(System.Single)
  - TetraCreations.Core.Utility.FloatValueCondition.IsMet
  - TetraCreations.Core.Utility.FloatValueCondition.Maximum
  - TetraCreations.Core.Utility.FloatValueCondition.OnMet
  - TetraCreations.Core.Utility.FloatValueCondition.OrEquals
  - TetraCreations.Core.Utility.FloatValueCondition.RaiseEventOnce
  - TetraCreations.Core.Utility.FloatValueCondition.ResetEventRaisedWhenNotMet
  - TetraCreations.Core.Utility.FloatValueCondition.TriggerEvent
  - TetraCreations.Core.Utility.FloatValueCondition.Value
  langs:
  - csharp
  - vb
  name: FloatValueCondition
  nameWithType: FloatValueCondition
  fullName: TetraCreations.Core.Utility.FloatValueCondition
  type: Class
  source:
    id: FloatValueCondition
    path: ''
    startLine: 38808
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public class FloatValueCondition
    content.vb: Public Class FloatValueCondition
  inheritance:
  - System.Object
- uid: TetraCreations.Core.Utility.FloatValueCondition.#ctor(System.Single,TetraCreations.Core.ConditionType,System.Boolean,System.Single)
  commentId: M:TetraCreations.Core.Utility.FloatValueCondition.#ctor(System.Single,TetraCreations.Core.ConditionType,System.Boolean,System.Single)
  id: '#ctor(System.Single,TetraCreations.Core.ConditionType,System.Boolean,System.Single)'
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: FloatValueCondition(float, ConditionType, bool, float)
  nameWithType: FloatValueCondition.FloatValueCondition(float, ConditionType, bool, float)
  fullName: TetraCreations.Core.Utility.FloatValueCondition.FloatValueCondition(float, TetraCreations.Core.ConditionType, bool, float)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 38826
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public FloatValueCondition(float value, ConditionType conditionType, bool orEquals = true, float equalityPrecision = 0.01)
    parameters:
    - id: value
      type: System.Single
    - id: conditionType
      type: TetraCreations.Core.ConditionType
    - id: orEquals
      type: System.Boolean
    - id: equalityPrecision
      type: System.Single
    content.vb: Public Sub New(value As Single, conditionType As ConditionType, orEquals As Boolean = True, equalityPrecision As Single = 0.01)
  overload: TetraCreations.Core.Utility.FloatValueCondition.#ctor*
  nameWithType.vb: FloatValueCondition.New(Single, ConditionType, Boolean, Single)
  fullName.vb: TetraCreations.Core.Utility.FloatValueCondition.New(Single, TetraCreations.Core.ConditionType, Boolean, Single)
  name.vb: New(Single, ConditionType, Boolean, Single)
- uid: TetraCreations.Core.Utility.FloatValueCondition.#ctor(System.Single,System.Single,System.Boolean,System.Single)
  commentId: M:TetraCreations.Core.Utility.FloatValueCondition.#ctor(System.Single,System.Single,System.Boolean,System.Single)
  id: '#ctor(System.Single,System.Single,System.Boolean,System.Single)'
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: FloatValueCondition(float, float, bool, float)
  nameWithType: FloatValueCondition.FloatValueCondition(float, float, bool, float)
  fullName: TetraCreations.Core.Utility.FloatValueCondition.FloatValueCondition(float, float, bool, float)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 38836
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public FloatValueCondition(float value, float maximum, bool orEquals = true, float equalityPrecision = 0.01)
    parameters:
    - id: value
      type: System.Single
    - id: maximum
      type: System.Single
    - id: orEquals
      type: System.Boolean
    - id: equalityPrecision
      type: System.Single
    content.vb: Public Sub New(value As Single, maximum As Single, orEquals As Boolean = True, equalityPrecision As Single = 0.01)
  overload: TetraCreations.Core.Utility.FloatValueCondition.#ctor*
  nameWithType.vb: FloatValueCondition.New(Single, Single, Boolean, Single)
  fullName.vb: TetraCreations.Core.Utility.FloatValueCondition.New(Single, Single, Boolean, Single)
  name.vb: New(Single, Single, Boolean, Single)
- uid: TetraCreations.Core.Utility.FloatValueCondition.Value
  commentId: P:TetraCreations.Core.Utility.FloatValueCondition.Value
  id: Value
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: FloatValueCondition.Value
  fullName: TetraCreations.Core.Utility.FloatValueCondition.Value
  type: Property
  source:
    id: Value
    path: ''
    startLine: 38847
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public float Value { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Value As Single
  overload: TetraCreations.Core.Utility.FloatValueCondition.Value*
- uid: TetraCreations.Core.Utility.FloatValueCondition.ConditionType
  commentId: P:TetraCreations.Core.Utility.FloatValueCondition.ConditionType
  id: ConditionType
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: ConditionType
  nameWithType: FloatValueCondition.ConditionType
  fullName: TetraCreations.Core.Utility.FloatValueCondition.ConditionType
  type: Property
  source:
    id: ConditionType
    path: ''
    startLine: 38848
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public ConditionType ConditionType { get; set; }
    parameters: []
    return:
      type: TetraCreations.Core.ConditionType
    content.vb: Public Property ConditionType As ConditionType
  overload: TetraCreations.Core.Utility.FloatValueCondition.ConditionType*
- uid: TetraCreations.Core.Utility.FloatValueCondition.OrEquals
  commentId: P:TetraCreations.Core.Utility.FloatValueCondition.OrEquals
  id: OrEquals
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: OrEquals
  nameWithType: FloatValueCondition.OrEquals
  fullName: TetraCreations.Core.Utility.FloatValueCondition.OrEquals
  type: Property
  source:
    id: OrEquals
    path: ''
    startLine: 38849
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public bool OrEquals { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property OrEquals As Boolean
  overload: TetraCreations.Core.Utility.FloatValueCondition.OrEquals*
- uid: TetraCreations.Core.Utility.FloatValueCondition.EqualityPrecision
  commentId: P:TetraCreations.Core.Utility.FloatValueCondition.EqualityPrecision
  id: EqualityPrecision
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: EqualityPrecision
  nameWithType: FloatValueCondition.EqualityPrecision
  fullName: TetraCreations.Core.Utility.FloatValueCondition.EqualityPrecision
  type: Property
  source:
    id: EqualityPrecision
    path: ''
    startLine: 38850
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public float EqualityPrecision { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property EqualityPrecision As Single
  overload: TetraCreations.Core.Utility.FloatValueCondition.EqualityPrecision*
- uid: TetraCreations.Core.Utility.FloatValueCondition.Maximum
  commentId: P:TetraCreations.Core.Utility.FloatValueCondition.Maximum
  id: Maximum
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: Maximum
  nameWithType: FloatValueCondition.Maximum
  fullName: TetraCreations.Core.Utility.FloatValueCondition.Maximum
  type: Property
  source:
    id: Maximum
    path: ''
    startLine: 38851
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public float Maximum { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Maximum As Single
  overload: TetraCreations.Core.Utility.FloatValueCondition.Maximum*
- uid: TetraCreations.Core.Utility.FloatValueCondition.RaiseEventOnce
  commentId: P:TetraCreations.Core.Utility.FloatValueCondition.RaiseEventOnce
  id: RaiseEventOnce
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: RaiseEventOnce
  nameWithType: FloatValueCondition.RaiseEventOnce
  fullName: TetraCreations.Core.Utility.FloatValueCondition.RaiseEventOnce
  type: Property
  source:
    id: RaiseEventOnce
    path: ''
    startLine: 38852
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public bool RaiseEventOnce { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RaiseEventOnce As Boolean
  overload: TetraCreations.Core.Utility.FloatValueCondition.RaiseEventOnce*
- uid: TetraCreations.Core.Utility.FloatValueCondition.ResetEventRaisedWhenNotMet
  commentId: P:TetraCreations.Core.Utility.FloatValueCondition.ResetEventRaisedWhenNotMet
  id: ResetEventRaisedWhenNotMet
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: ResetEventRaisedWhenNotMet
  nameWithType: FloatValueCondition.ResetEventRaisedWhenNotMet
  fullName: TetraCreations.Core.Utility.FloatValueCondition.ResetEventRaisedWhenNotMet
  type: Property
  source:
    id: ResetEventRaisedWhenNotMet
    path: ''
    startLine: 38853
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public bool ResetEventRaisedWhenNotMet { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ResetEventRaisedWhenNotMet As Boolean
  overload: TetraCreations.Core.Utility.FloatValueCondition.ResetEventRaisedWhenNotMet*
- uid: TetraCreations.Core.Utility.FloatValueCondition.EventRaised
  commentId: P:TetraCreations.Core.Utility.FloatValueCondition.EventRaised
  id: EventRaised
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: EventRaised
  nameWithType: FloatValueCondition.EventRaised
  fullName: TetraCreations.Core.Utility.FloatValueCondition.EventRaised
  type: Property
  source:
    id: EventRaised
    path: ''
    startLine: 38854
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public bool EventRaised { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property EventRaised As Boolean
  overload: TetraCreations.Core.Utility.FloatValueCondition.EventRaised*
- uid: TetraCreations.Core.Utility.FloatValueCondition.IsMet
  commentId: P:TetraCreations.Core.Utility.FloatValueCondition.IsMet
  id: IsMet
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: IsMet
  nameWithType: FloatValueCondition.IsMet
  fullName: TetraCreations.Core.Utility.FloatValueCondition.IsMet
  type: Property
  source:
    id: IsMet
    path: ''
    startLine: 38855
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public bool IsMet { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMet As Boolean
  overload: TetraCreations.Core.Utility.FloatValueCondition.IsMet*
- uid: TetraCreations.Core.Utility.FloatValueCondition.OnMet
  commentId: E:TetraCreations.Core.Utility.FloatValueCondition.OnMet
  id: OnMet
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: OnMet
  nameWithType: FloatValueCondition.OnMet
  fullName: TetraCreations.Core.Utility.FloatValueCondition.OnMet
  type: Event
  source:
    id: OnMet
    path: ''
    startLine: 38859
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public event FloatValueCondition.ConditionIsMet OnMet
    return:
      type: TetraCreations.Core.Utility.FloatValueCondition.ConditionIsMet
    content.vb: Public Event OnMet As FloatValueCondition.ConditionIsMet
- uid: TetraCreations.Core.Utility.FloatValueCondition.Evaluate(System.Single)
  commentId: M:TetraCreations.Core.Utility.FloatValueCondition.Evaluate(System.Single)
  id: Evaluate(System.Single)
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: Evaluate(float)
  nameWithType: FloatValueCondition.Evaluate(float)
  fullName: TetraCreations.Core.Utility.FloatValueCondition.Evaluate(float)
  type: Method
  source:
    id: Evaluate
    path: ''
    startLine: 38866
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nDetermines if the condition is satisfied depending on the ConditionType selected.\n"
  example: []
  syntax:
    content: public bool Evaluate(float value)
    parameters:
    - id: value
      type: System.Single
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Evaluate(value As Single) As Boolean
  overload: TetraCreations.Core.Utility.FloatValueCondition.Evaluate*
  nameWithType.vb: FloatValueCondition.Evaluate(Single)
  fullName.vb: TetraCreations.Core.Utility.FloatValueCondition.Evaluate(Single)
  name.vb: Evaluate(Single)
- uid: TetraCreations.Core.Utility.FloatValueCondition.IsLower(System.Single)
  commentId: M:TetraCreations.Core.Utility.FloatValueCondition.IsLower(System.Single)
  id: IsLower(System.Single)
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: IsLower(float)
  nameWithType: FloatValueCondition.IsLower(float)
  fullName: TetraCreations.Core.Utility.FloatValueCondition.IsLower(float)
  type: Method
  source:
    id: IsLower
    path: ''
    startLine: 38898
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nDetermines if the passed value is lower than the condition&apos;s value\n"
  example: []
  syntax:
    content: protected bool IsLower(float value)
    parameters:
    - id: value
      type: System.Single
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected Function IsLower(value As Single) As Boolean
  overload: TetraCreations.Core.Utility.FloatValueCondition.IsLower*
  nameWithType.vb: FloatValueCondition.IsLower(Single)
  fullName.vb: TetraCreations.Core.Utility.FloatValueCondition.IsLower(Single)
  name.vb: IsLower(Single)
- uid: TetraCreations.Core.Utility.FloatValueCondition.IsGreater(System.Single)
  commentId: M:TetraCreations.Core.Utility.FloatValueCondition.IsGreater(System.Single)
  id: IsGreater(System.Single)
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: IsGreater(float)
  nameWithType: FloatValueCondition.IsGreater(float)
  fullName: TetraCreations.Core.Utility.FloatValueCondition.IsGreater(float)
  type: Method
  source:
    id: IsGreater
    path: ''
    startLine: 38913
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nDetermines if the passed value is greater than the condition&apos;s value\n"
  example: []
  syntax:
    content: protected bool IsGreater(float value)
    parameters:
    - id: value
      type: System.Single
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected Function IsGreater(value As Single) As Boolean
  overload: TetraCreations.Core.Utility.FloatValueCondition.IsGreater*
  nameWithType.vb: FloatValueCondition.IsGreater(Single)
  fullName.vb: TetraCreations.Core.Utility.FloatValueCondition.IsGreater(Single)
  name.vb: IsGreater(Single)
- uid: TetraCreations.Core.Utility.FloatValueCondition.IsBetween(System.Single)
  commentId: M:TetraCreations.Core.Utility.FloatValueCondition.IsBetween(System.Single)
  id: IsBetween(System.Single)
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: IsBetween(float)
  nameWithType: FloatValueCondition.IsBetween(float)
  fullName: TetraCreations.Core.Utility.FloatValueCondition.IsBetween(float)
  type: Method
  source:
    id: IsBetween
    path: ''
    startLine: 38928
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nDetermines if the passed value is between than the condition&apos;s values\n"
  example: []
  syntax:
    content: protected bool IsBetween(float value)
    parameters:
    - id: value
      type: System.Single
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected Function IsBetween(value As Single) As Boolean
  overload: TetraCreations.Core.Utility.FloatValueCondition.IsBetween*
  nameWithType.vb: FloatValueCondition.IsBetween(Single)
  fullName.vb: TetraCreations.Core.Utility.FloatValueCondition.IsBetween(Single)
  name.vb: IsBetween(Single)
- uid: TetraCreations.Core.Utility.FloatValueCondition.IsEquals(System.Single)
  commentId: M:TetraCreations.Core.Utility.FloatValueCondition.IsEquals(System.Single)
  id: IsEquals(System.Single)
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: IsEquals(float)
  nameWithType: FloatValueCondition.IsEquals(float)
  fullName: TetraCreations.Core.Utility.FloatValueCondition.IsEquals(float)
  type: Method
  source:
    id: IsEquals
    path: ''
    startLine: 38943
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nDetermines if the passed value is equals to the condition&apos;s value\n"
  example: []
  syntax:
    content: protected bool IsEquals(float value)
    parameters:
    - id: value
      type: System.Single
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected Function IsEquals(value As Single) As Boolean
  overload: TetraCreations.Core.Utility.FloatValueCondition.IsEquals*
  nameWithType.vb: FloatValueCondition.IsEquals(Single)
  fullName.vb: TetraCreations.Core.Utility.FloatValueCondition.IsEquals(Single)
  name.vb: IsEquals(Single)
- uid: TetraCreations.Core.Utility.FloatValueCondition.TriggerEvent
  commentId: M:TetraCreations.Core.Utility.FloatValueCondition.TriggerEvent
  id: TriggerEvent
  parent: TetraCreations.Core.Utility.FloatValueCondition
  langs:
  - csharp
  - vb
  name: TriggerEvent()
  nameWithType: FloatValueCondition.TriggerEvent()
  fullName: TetraCreations.Core.Utility.FloatValueCondition.TriggerEvent()
  type: Method
  source:
    id: TriggerEvent
    path: ''
    startLine: 38951
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nInvokes OnMet event unless TriggerEventOnlyOnce and it has been invoked already.\n"
  example: []
  syntax:
    content: protected virtual void TriggerEvent()
    content.vb: Protected Overridable Sub TriggerEvent()
  overload: TetraCreations.Core.Utility.FloatValueCondition.TriggerEvent*
references:
- uid: TetraCreations.Core.Utility
  commentId: N:TetraCreations.Core.Utility
  name: TetraCreations.Core.Utility
  nameWithType: TetraCreations.Core.Utility
  fullName: TetraCreations.Core.Utility
  spec.csharp:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
  - name: .
  - uid: TetraCreations.Core.Utility
    name: Utility
  spec.vb:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
  - name: .
  - uid: TetraCreations.Core.Utility
    name: Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TetraCreations.Core.Utility.FloatValueCondition.#ctor*
  commentId: Overload:TetraCreations.Core.Utility.FloatValueCondition.#ctor
  name: FloatValueCondition
  nameWithType: FloatValueCondition.FloatValueCondition
  fullName: TetraCreations.Core.Utility.FloatValueCondition.FloatValueCondition
  nameWithType.vb: FloatValueCondition.New
  fullName.vb: TetraCreations.Core.Utility.FloatValueCondition.New
  name.vb: New
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TetraCreations.Core.ConditionType
  commentId: T:TetraCreations.Core.ConditionType
  parent: TetraCreations.Core
  name: ConditionType
  nameWithType: ConditionType
  fullName: TetraCreations.Core.ConditionType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TetraCreations.Core
  commentId: N:TetraCreations.Core
  name: TetraCreations.Core
  nameWithType: TetraCreations.Core
  fullName: TetraCreations.Core
  spec.csharp:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
  spec.vb:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
- uid: TetraCreations.Core.Utility.FloatValueCondition.Value*
  commentId: Overload:TetraCreations.Core.Utility.FloatValueCondition.Value
  name: Value
  nameWithType: FloatValueCondition.Value
  fullName: TetraCreations.Core.Utility.FloatValueCondition.Value
- uid: TetraCreations.Core.Utility.FloatValueCondition.ConditionType*
  commentId: Overload:TetraCreations.Core.Utility.FloatValueCondition.ConditionType
  name: ConditionType
  nameWithType: FloatValueCondition.ConditionType
  fullName: TetraCreations.Core.Utility.FloatValueCondition.ConditionType
- uid: TetraCreations.Core.Utility.FloatValueCondition.OrEquals*
  commentId: Overload:TetraCreations.Core.Utility.FloatValueCondition.OrEquals
  name: OrEquals
  nameWithType: FloatValueCondition.OrEquals
  fullName: TetraCreations.Core.Utility.FloatValueCondition.OrEquals
- uid: TetraCreations.Core.Utility.FloatValueCondition.EqualityPrecision*
  commentId: Overload:TetraCreations.Core.Utility.FloatValueCondition.EqualityPrecision
  name: EqualityPrecision
  nameWithType: FloatValueCondition.EqualityPrecision
  fullName: TetraCreations.Core.Utility.FloatValueCondition.EqualityPrecision
- uid: TetraCreations.Core.Utility.FloatValueCondition.Maximum*
  commentId: Overload:TetraCreations.Core.Utility.FloatValueCondition.Maximum
  name: Maximum
  nameWithType: FloatValueCondition.Maximum
  fullName: TetraCreations.Core.Utility.FloatValueCondition.Maximum
- uid: TetraCreations.Core.Utility.FloatValueCondition.RaiseEventOnce*
  commentId: Overload:TetraCreations.Core.Utility.FloatValueCondition.RaiseEventOnce
  name: RaiseEventOnce
  nameWithType: FloatValueCondition.RaiseEventOnce
  fullName: TetraCreations.Core.Utility.FloatValueCondition.RaiseEventOnce
- uid: TetraCreations.Core.Utility.FloatValueCondition.ResetEventRaisedWhenNotMet*
  commentId: Overload:TetraCreations.Core.Utility.FloatValueCondition.ResetEventRaisedWhenNotMet
  name: ResetEventRaisedWhenNotMet
  nameWithType: FloatValueCondition.ResetEventRaisedWhenNotMet
  fullName: TetraCreations.Core.Utility.FloatValueCondition.ResetEventRaisedWhenNotMet
- uid: TetraCreations.Core.Utility.FloatValueCondition.EventRaised*
  commentId: Overload:TetraCreations.Core.Utility.FloatValueCondition.EventRaised
  name: EventRaised
  nameWithType: FloatValueCondition.EventRaised
  fullName: TetraCreations.Core.Utility.FloatValueCondition.EventRaised
- uid: TetraCreations.Core.Utility.FloatValueCondition.IsMet*
  commentId: Overload:TetraCreations.Core.Utility.FloatValueCondition.IsMet
  name: IsMet
  nameWithType: FloatValueCondition.IsMet
  fullName: TetraCreations.Core.Utility.FloatValueCondition.IsMet
- uid: TetraCreations.Core.Utility.FloatValueCondition.ConditionIsMet
  commentId: T:TetraCreations.Core.Utility.FloatValueCondition.ConditionIsMet
  parent: TetraCreations.Core.Utility
  name: FloatValueCondition.ConditionIsMet
  nameWithType: FloatValueCondition.ConditionIsMet
  fullName: TetraCreations.Core.Utility.FloatValueCondition.ConditionIsMet
  spec.csharp:
  - uid: TetraCreations.Core.Utility.FloatValueCondition
    name: FloatValueCondition
  - name: .
  - uid: TetraCreations.Core.Utility.FloatValueCondition.ConditionIsMet
    name: ConditionIsMet
  spec.vb:
  - uid: TetraCreations.Core.Utility.FloatValueCondition
    name: FloatValueCondition
  - name: .
  - uid: TetraCreations.Core.Utility.FloatValueCondition.ConditionIsMet
    name: ConditionIsMet
- uid: TetraCreations.Core.Utility.FloatValueCondition.Evaluate*
  commentId: Overload:TetraCreations.Core.Utility.FloatValueCondition.Evaluate
  name: Evaluate
  nameWithType: FloatValueCondition.Evaluate
  fullName: TetraCreations.Core.Utility.FloatValueCondition.Evaluate
- uid: TetraCreations.Core.Utility.FloatValueCondition.IsLower*
  commentId: Overload:TetraCreations.Core.Utility.FloatValueCondition.IsLower
  name: IsLower
  nameWithType: FloatValueCondition.IsLower
  fullName: TetraCreations.Core.Utility.FloatValueCondition.IsLower
- uid: TetraCreations.Core.Utility.FloatValueCondition.IsGreater*
  commentId: Overload:TetraCreations.Core.Utility.FloatValueCondition.IsGreater
  name: IsGreater
  nameWithType: FloatValueCondition.IsGreater
  fullName: TetraCreations.Core.Utility.FloatValueCondition.IsGreater
- uid: TetraCreations.Core.Utility.FloatValueCondition.IsBetween*
  commentId: Overload:TetraCreations.Core.Utility.FloatValueCondition.IsBetween
  name: IsBetween
  nameWithType: FloatValueCondition.IsBetween
  fullName: TetraCreations.Core.Utility.FloatValueCondition.IsBetween
- uid: TetraCreations.Core.Utility.FloatValueCondition.IsEquals*
  commentId: Overload:TetraCreations.Core.Utility.FloatValueCondition.IsEquals
  name: IsEquals
  nameWithType: FloatValueCondition.IsEquals
  fullName: TetraCreations.Core.Utility.FloatValueCondition.IsEquals
- uid: TetraCreations.Core.Utility.FloatValueCondition.TriggerEvent*
  commentId: Overload:TetraCreations.Core.Utility.FloatValueCondition.TriggerEvent
  name: TriggerEvent
  nameWithType: FloatValueCondition.TriggerEvent
  fullName: TetraCreations.Core.Utility.FloatValueCondition.TriggerEvent
