### YamlMime:ManagedReference
items:
- uid: TetraCreations.Core.Editor.EditorExtensions
  commentId: T:TetraCreations.Core.Editor.EditorExtensions
  id: EditorExtensions
  parent: TetraCreations.Core.Editor
  children:
  - TetraCreations.Core.Editor.EditorExtensions.DrawUILine(Color,System.Int32,System.Int32,System.String,GUIStyle,System.Single)
  - TetraCreations.Core.Editor.EditorExtensions.RemoveAt(SerializedProperty,System.Int32)
  - TetraCreations.Core.Editor.EditorExtensions.TryToFindSerializableProperty(System.String,SerializedProperty)
  - TetraCreations.Core.Editor.EditorExtensions.VerifyMissingUnityEventImplementation(MonoBehaviour,UnityEventBase,System.Boolean)
  langs:
  - csharp
  - vb
  name: EditorExtensions
  nameWithType: EditorExtensions
  fullName: TetraCreations.Core.Editor.EditorExtensions
  type: Class
  source:
    id: EditorExtensions
    path: ''
    startLine: 35552
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Editor
  syntax:
    content: public static class EditorExtensions
    content.vb: Public Module EditorExtensions
  inheritance:
  - System.Object
- uid: TetraCreations.Core.Editor.EditorExtensions.DrawUILine(Color,System.Int32,System.Int32,System.String,GUIStyle,System.Single)
  commentId: M:TetraCreations.Core.Editor.EditorExtensions.DrawUILine(Color,System.Int32,System.Int32,System.String,GUIStyle,System.Single)
  id: DrawUILine(Color,System.Int32,System.Int32,System.String,GUIStyle,System.Single)
  parent: TetraCreations.Core.Editor.EditorExtensions
  langs:
  - csharp
  - vb
  name: DrawUILine(Color, int, int, string, GUIStyle, float)
  nameWithType: EditorExtensions.DrawUILine(Color, int, int, string, GUIStyle, float)
  fullName: TetraCreations.Core.Editor.EditorExtensions.DrawUILine(Color, int, int, string, GUIStyle, float)
  type: Method
  source:
    id: DrawUILine
    path: ''
    startLine: 35563
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Editor
  summary: "\nShow a line with/without text in the center inside an editor.\n"
  example: []
  syntax:
    content: public static void DrawUILine(Color color, int thickness = 2, int padding = 10, string text = null, GUIStyle textStyle = null, float textSize = 130)
    parameters:
    - id: color
      type: Global.Color
      description: ''
    - id: thickness
      type: System.Int32
      description: ''
    - id: padding
      type: System.Int32
      description: ''
    - id: text
      type: System.String
      description: ''
    - id: textStyle
      type: Global.GUIStyle
      description: ''
    - id: textSize
      type: System.Single
      description: ''
    content.vb: Public Shared Sub DrawUILine(color As Color, thickness As Integer = 2, padding As Integer = 10, text As String = Nothing, textStyle As GUIStyle = Nothing, textSize As Single = 130)
  overload: TetraCreations.Core.Editor.EditorExtensions.DrawUILine*
  nameWithType.vb: EditorExtensions.DrawUILine(Color, Integer, Integer, String, GUIStyle, Single)
  fullName.vb: TetraCreations.Core.Editor.EditorExtensions.DrawUILine(Color, Integer, Integer, String, GUIStyle, Single)
  name.vb: DrawUILine(Color, Integer, Integer, String, GUIStyle, Single)
- uid: TetraCreations.Core.Editor.EditorExtensions.RemoveAt(SerializedProperty,System.Int32)
  commentId: M:TetraCreations.Core.Editor.EditorExtensions.RemoveAt(SerializedProperty,System.Int32)
  id: RemoveAt(SerializedProperty,System.Int32)
  isExtensionMethod: true
  parent: TetraCreations.Core.Editor.EditorExtensions
  langs:
  - csharp
  - vb
  name: RemoveAt(SerializedProperty, int)
  nameWithType: EditorExtensions.RemoveAt(SerializedProperty, int)
  fullName: TetraCreations.Core.Editor.EditorExtensions.RemoveAt(SerializedProperty, int)
  type: Method
  source:
    id: RemoveAt
    path: ''
    startLine: 35596
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Editor
  summary: "\nRemove the element at a specific index in a SerializedProperty Array\n"
  example: []
  syntax:
    content: public static bool RemoveAt(this SerializedProperty prop, int index)
    parameters:
    - id: prop
      type: Global.SerializedProperty
      description: ''
    - id: index
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function RemoveAt(prop As SerializedProperty, index As Integer) As Boolean
  overload: TetraCreations.Core.Editor.EditorExtensions.RemoveAt*
  nameWithType.vb: EditorExtensions.RemoveAt(SerializedProperty, Integer)
  fullName.vb: TetraCreations.Core.Editor.EditorExtensions.RemoveAt(SerializedProperty, Integer)
  name.vb: RemoveAt(SerializedProperty, Integer)
- uid: TetraCreations.Core.Editor.EditorExtensions.TryToFindSerializableProperty(System.String,SerializedProperty)
  commentId: M:TetraCreations.Core.Editor.EditorExtensions.TryToFindSerializableProperty(System.String,SerializedProperty)
  id: TryToFindSerializableProperty(System.String,SerializedProperty)
  parent: TetraCreations.Core.Editor.EditorExtensions
  langs:
  - csharp
  - vb
  name: TryToFindSerializableProperty(string, SerializedProperty)
  nameWithType: EditorExtensions.TryToFindSerializableProperty(string, SerializedProperty)
  fullName: TetraCreations.Core.Editor.EditorExtensions.TryToFindSerializableProperty(string, SerializedProperty)
  type: Method
  source:
    id: TryToFindSerializableProperty
    path: ''
    startLine: 35617
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Editor
  summary: "\nReturn SerializedProperty by it&apos;s name if it exists, it works for nested objects and array\n"
  example: []
  syntax:
    content: public static SerializedProperty TryToFindSerializableProperty(string propertyName, SerializedProperty property)
    parameters:
    - id: propertyName
      type: System.String
      description: ''
    - id: property
      type: Global.SerializedProperty
      description: ''
    return:
      type: Global.SerializedProperty
      description: ''
    content.vb: Public Shared Function TryToFindSerializableProperty(propertyName As String, [property] As SerializedProperty) As SerializedProperty
  overload: TetraCreations.Core.Editor.EditorExtensions.TryToFindSerializableProperty*
  nameWithType.vb: EditorExtensions.TryToFindSerializableProperty(String, SerializedProperty)
  fullName.vb: TetraCreations.Core.Editor.EditorExtensions.TryToFindSerializableProperty(String, SerializedProperty)
  name.vb: TryToFindSerializableProperty(String, SerializedProperty)
- uid: TetraCreations.Core.Editor.EditorExtensions.VerifyMissingUnityEventImplementation(MonoBehaviour,UnityEventBase,System.Boolean)
  commentId: M:TetraCreations.Core.Editor.EditorExtensions.VerifyMissingUnityEventImplementation(MonoBehaviour,UnityEventBase,System.Boolean)
  id: VerifyMissingUnityEventImplementation(MonoBehaviour,UnityEventBase,System.Boolean)
  parent: TetraCreations.Core.Editor.EditorExtensions
  langs:
  - csharp
  - vb
  name: VerifyMissingUnityEventImplementation(MonoBehaviour, UnityEventBase, bool)
  nameWithType: EditorExtensions.VerifyMissingUnityEventImplementation(MonoBehaviour, UnityEventBase, bool)
  fullName: TetraCreations.Core.Editor.EditorExtensions.VerifyMissingUnityEventImplementation(MonoBehaviour, UnityEventBase, bool)
  type: Method
  source:
    id: VerifyMissingUnityEventImplementation
    path: ''
    startLine: 35642
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Editor
  summary: "\nVerify if an UnityEventBase is missing the required reference to another script or if the method doesn&apos;t exist anymore.\n"
  example: []
  syntax:
    content: public static void VerifyMissingUnityEventImplementation(MonoBehaviour controller, UnityEventBase unityEvent, bool requireHandler = false)
    parameters:
    - id: controller
      type: Global.MonoBehaviour
      description: ''
    - id: unityEvent
      type: Global.UnityEventBase
      description: ''
    - id: requireHandler
      type: System.Boolean
      description: ''
    content.vb: Public Shared Sub VerifyMissingUnityEventImplementation(controller As MonoBehaviour, unityEvent As UnityEventBase, requireHandler As Boolean = False)
  overload: TetraCreations.Core.Editor.EditorExtensions.VerifyMissingUnityEventImplementation*
  nameWithType.vb: EditorExtensions.VerifyMissingUnityEventImplementation(MonoBehaviour, UnityEventBase, Boolean)
  fullName.vb: TetraCreations.Core.Editor.EditorExtensions.VerifyMissingUnityEventImplementation(MonoBehaviour, UnityEventBase, Boolean)
  name.vb: VerifyMissingUnityEventImplementation(MonoBehaviour, UnityEventBase, Boolean)
references:
- uid: TetraCreations.Core.Editor
  commentId: N:TetraCreations.Core.Editor
  name: TetraCreations.Core.Editor
  nameWithType: TetraCreations.Core.Editor
  fullName: TetraCreations.Core.Editor
  spec.csharp:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
  - name: .
  - uid: TetraCreations.Core.Editor
    name: Editor
  spec.vb:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
  - name: .
  - uid: TetraCreations.Core.Editor
    name: Editor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TetraCreations.Core.Editor.EditorExtensions.DrawUILine*
  commentId: Overload:TetraCreations.Core.Editor.EditorExtensions.DrawUILine
  name: DrawUILine
  nameWithType: EditorExtensions.DrawUILine
  fullName: TetraCreations.Core.Editor.EditorExtensions.DrawUILine
- uid: Global.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Color
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.GUIStyle
  commentId: '!:Global.GUIStyle'
  isExternal: true
  name: GUIStyle
  nameWithType: GUIStyle
  fullName: GUIStyle
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TetraCreations.Core.Editor.EditorExtensions.RemoveAt*
  commentId: Overload:TetraCreations.Core.Editor.EditorExtensions.RemoveAt
  name: RemoveAt
  nameWithType: EditorExtensions.RemoveAt
  fullName: TetraCreations.Core.Editor.EditorExtensions.RemoveAt
- uid: Global.SerializedProperty
  isExternal: true
  name: SerializedProperty
  nameWithType: SerializedProperty
  fullName: SerializedProperty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TetraCreations.Core.Editor.EditorExtensions.TryToFindSerializableProperty*
  commentId: Overload:TetraCreations.Core.Editor.EditorExtensions.TryToFindSerializableProperty
  name: TryToFindSerializableProperty
  nameWithType: EditorExtensions.TryToFindSerializableProperty
  fullName: TetraCreations.Core.Editor.EditorExtensions.TryToFindSerializableProperty
- uid: TetraCreations.Core.Editor.EditorExtensions.VerifyMissingUnityEventImplementation*
  commentId: Overload:TetraCreations.Core.Editor.EditorExtensions.VerifyMissingUnityEventImplementation
  name: VerifyMissingUnityEventImplementation
  nameWithType: EditorExtensions.VerifyMissingUnityEventImplementation
  fullName: TetraCreations.Core.Editor.EditorExtensions.VerifyMissingUnityEventImplementation
- uid: Global.MonoBehaviour
  commentId: '!:Global.MonoBehaviour'
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: MonoBehaviour
- uid: Global.UnityEventBase
  commentId: '!:Global.UnityEventBase'
  isExternal: true
  name: UnityEventBase
  nameWithType: UnityEventBase
  fullName: UnityEventBase
