### YamlMime:ManagedReference
items:
- uid: TetraCreations.Core.AudioMixerExtensions
  commentId: T:TetraCreations.Core.AudioMixerExtensions
  id: AudioMixerExtensions
  parent: TetraCreations.Core
  children:
  - TetraCreations.Core.AudioMixerExtensions.ClampDecibelVolume(System.Single,System.Single,System.Single)
  - TetraCreations.Core.AudioMixerExtensions.ClampLinearVolume(System.Single,System.Single,System.Single)
  - TetraCreations.Core.AudioMixerExtensions.ClampPercentageVolume(System.Single,System.Single,System.Single)
  - TetraCreations.Core.AudioMixerExtensions.DecibelToString(System.Single)
  - TetraCreations.Core.AudioMixerExtensions.GetAudioMixerGroup(AudioMixer,System.String,System.String)
  - TetraCreations.Core.AudioMixerExtensions.GetDecibelValueFromLinear(System.Single,System.Boolean)
  - TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromDecibel(System.Single,System.Boolean)
  - TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromPercentage(System.Single,System.Boolean)
  - TetraCreations.Core.AudioMixerExtensions.GetLinearVolume(AudioMixer,System.String,System.Single@,System.Boolean)
  - TetraCreations.Core.AudioMixerExtensions.MaximumDecibelVolume
  - TetraCreations.Core.AudioMixerExtensions.MaximumLinearVolume
  - TetraCreations.Core.AudioMixerExtensions.MaximumPercentageVolume
  - TetraCreations.Core.AudioMixerExtensions.MaximumSafeDecibelVolume
  - TetraCreations.Core.AudioMixerExtensions.MaximumSafeLinearVolume
  - TetraCreations.Core.AudioMixerExtensions.MaximumSafePercentageVolume
  - TetraCreations.Core.AudioMixerExtensions.MinimumDecibelVolume
  - TetraCreations.Core.AudioMixerExtensions.MinimumLinearVolume
  - TetraCreations.Core.AudioMixerExtensions.MinimumPercentageVolume
  - TetraCreations.Core.AudioMixerExtensions.SetLinearVolume(AudioMixer,System.String,System.Single,System.Boolean)
  langs:
  - csharp
  - vb
  name: AudioMixerExtensions
  nameWithType: AudioMixerExtensions
  fullName: TetraCreations.Core.AudioMixerExtensions
  type: Class
  source:
    id: AudioMixerExtensions
    path: ''
    startLine: 35963
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nContains several methods to easily convert volume value from decibel to linear or percentage. \nBy default the exposed volume parameter of an AudioMixer is in decibel hovewer when \ncontrolling the volume with a slider from the UI we have a linear value which needs to be converted.\nThe convertion happens automatically when calling SetLinearVolume()\n"
  example: []
  syntax:
    content: public static class AudioMixerExtensions
    content.vb: Public Module AudioMixerExtensions
  inheritance:
  - System.Object
- uid: TetraCreations.Core.AudioMixerExtensions.MinimumLinearVolume
  commentId: F:TetraCreations.Core.AudioMixerExtensions.MinimumLinearVolume
  id: MinimumLinearVolume
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: MinimumLinearVolume
  nameWithType: AudioMixerExtensions.MinimumLinearVolume
  fullName: TetraCreations.Core.AudioMixerExtensions.MinimumLinearVolume
  type: Field
  source:
    id: MinimumLinearVolume
    path: ''
    startLine: 35966
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  syntax:
    content: public const float MinimumLinearVolume = 0.0001
    return:
      type: System.Single
    content.vb: Public Const MinimumLinearVolume As Single = 0.0001
- uid: TetraCreations.Core.AudioMixerExtensions.MaximumLinearVolume
  commentId: F:TetraCreations.Core.AudioMixerExtensions.MaximumLinearVolume
  id: MaximumLinearVolume
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: MaximumLinearVolume
  nameWithType: AudioMixerExtensions.MaximumLinearVolume
  fullName: TetraCreations.Core.AudioMixerExtensions.MaximumLinearVolume
  type: Field
  source:
    id: MaximumLinearVolume
    path: ''
    startLine: 35967
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  syntax:
    content: public const float MaximumLinearVolume = 10
    return:
      type: System.Single
    content.vb: Public Const MaximumLinearVolume As Single = 10
- uid: TetraCreations.Core.AudioMixerExtensions.MaximumSafeLinearVolume
  commentId: F:TetraCreations.Core.AudioMixerExtensions.MaximumSafeLinearVolume
  id: MaximumSafeLinearVolume
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: MaximumSafeLinearVolume
  nameWithType: AudioMixerExtensions.MaximumSafeLinearVolume
  fullName: TetraCreations.Core.AudioMixerExtensions.MaximumSafeLinearVolume
  type: Field
  source:
    id: MaximumSafeLinearVolume
    path: ''
    startLine: 35968
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  syntax:
    content: public const float MaximumSafeLinearVolume = 1
    return:
      type: System.Single
    content.vb: Public Const MaximumSafeLinearVolume As Single = 1
- uid: TetraCreations.Core.AudioMixerExtensions.MinimumPercentageVolume
  commentId: F:TetraCreations.Core.AudioMixerExtensions.MinimumPercentageVolume
  id: MinimumPercentageVolume
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: MinimumPercentageVolume
  nameWithType: AudioMixerExtensions.MinimumPercentageVolume
  fullName: TetraCreations.Core.AudioMixerExtensions.MinimumPercentageVolume
  type: Field
  source:
    id: MinimumPercentageVolume
    path: ''
    startLine: 35971
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  syntax:
    content: public const float MinimumPercentageVolume = 0
    return:
      type: System.Single
    content.vb: Public Const MinimumPercentageVolume As Single = 0
- uid: TetraCreations.Core.AudioMixerExtensions.MaximumSafePercentageVolume
  commentId: F:TetraCreations.Core.AudioMixerExtensions.MaximumSafePercentageVolume
  id: MaximumSafePercentageVolume
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: MaximumSafePercentageVolume
  nameWithType: AudioMixerExtensions.MaximumSafePercentageVolume
  fullName: TetraCreations.Core.AudioMixerExtensions.MaximumSafePercentageVolume
  type: Field
  source:
    id: MaximumSafePercentageVolume
    path: ''
    startLine: 35972
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  syntax:
    content: public const float MaximumSafePercentageVolume = 100
    return:
      type: System.Single
    content.vb: Public Const MaximumSafePercentageVolume As Single = 100
- uid: TetraCreations.Core.AudioMixerExtensions.MaximumPercentageVolume
  commentId: F:TetraCreations.Core.AudioMixerExtensions.MaximumPercentageVolume
  id: MaximumPercentageVolume
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: MaximumPercentageVolume
  nameWithType: AudioMixerExtensions.MaximumPercentageVolume
  fullName: TetraCreations.Core.AudioMixerExtensions.MaximumPercentageVolume
  type: Field
  source:
    id: MaximumPercentageVolume
    path: ''
    startLine: 35973
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  syntax:
    content: public const float MaximumPercentageVolume = 1000
    return:
      type: System.Single
    content.vb: Public Const MaximumPercentageVolume As Single = 1000
- uid: TetraCreations.Core.AudioMixerExtensions.MinimumDecibelVolume
  commentId: F:TetraCreations.Core.AudioMixerExtensions.MinimumDecibelVolume
  id: MinimumDecibelVolume
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: MinimumDecibelVolume
  nameWithType: AudioMixerExtensions.MinimumDecibelVolume
  fullName: TetraCreations.Core.AudioMixerExtensions.MinimumDecibelVolume
  type: Field
  source:
    id: MinimumDecibelVolume
    path: ''
    startLine: 35976
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  syntax:
    content: public const float MinimumDecibelVolume = -80
    return:
      type: System.Single
    content.vb: Public Const MinimumDecibelVolume As Single = -80
- uid: TetraCreations.Core.AudioMixerExtensions.MaximumDecibelVolume
  commentId: F:TetraCreations.Core.AudioMixerExtensions.MaximumDecibelVolume
  id: MaximumDecibelVolume
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: MaximumDecibelVolume
  nameWithType: AudioMixerExtensions.MaximumDecibelVolume
  fullName: TetraCreations.Core.AudioMixerExtensions.MaximumDecibelVolume
  type: Field
  source:
    id: MaximumDecibelVolume
    path: ''
    startLine: 35977
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  syntax:
    content: public const float MaximumDecibelVolume = 20
    return:
      type: System.Single
    content.vb: Public Const MaximumDecibelVolume As Single = 20
- uid: TetraCreations.Core.AudioMixerExtensions.MaximumSafeDecibelVolume
  commentId: F:TetraCreations.Core.AudioMixerExtensions.MaximumSafeDecibelVolume
  id: MaximumSafeDecibelVolume
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: MaximumSafeDecibelVolume
  nameWithType: AudioMixerExtensions.MaximumSafeDecibelVolume
  fullName: TetraCreations.Core.AudioMixerExtensions.MaximumSafeDecibelVolume
  type: Field
  source:
    id: MaximumSafeDecibelVolume
    path: ''
    startLine: 35978
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  syntax:
    content: public const float MaximumSafeDecibelVolume = 0
    return:
      type: System.Single
    content.vb: Public Const MaximumSafeDecibelVolume As Single = 0
- uid: TetraCreations.Core.AudioMixerExtensions.GetDecibelValueFromLinear(System.Single,System.Boolean)
  commentId: M:TetraCreations.Core.AudioMixerExtensions.GetDecibelValueFromLinear(System.Single,System.Boolean)
  id: GetDecibelValueFromLinear(System.Single,System.Boolean)
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: GetDecibelValueFromLinear(float, bool)
  nameWithType: AudioMixerExtensions.GetDecibelValueFromLinear(float, bool)
  fullName: TetraCreations.Core.AudioMixerExtensions.GetDecibelValueFromLinear(float, bool)
  type: Method
  source:
    id: GetDecibelValueFromLinear
    path: ''
    startLine: 35986
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nReturns the decibel value from a linear value.\n"
  example: []
  syntax:
    content: public static float GetDecibelValueFromLinear(float linearVolume, bool clamp = true)
    parameters:
    - id: linearVolume
      type: System.Single
      description: Volume as linear
    - id: clamp
      type: System.Boolean
      description: 'Will prevent the value to exceed : -80f and 0f'
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function GetDecibelValueFromLinear(linearVolume As Single, clamp As Boolean = True) As Single
  overload: TetraCreations.Core.AudioMixerExtensions.GetDecibelValueFromLinear*
  nameWithType.vb: AudioMixerExtensions.GetDecibelValueFromLinear(Single, Boolean)
  fullName.vb: TetraCreations.Core.AudioMixerExtensions.GetDecibelValueFromLinear(Single, Boolean)
  name.vb: GetDecibelValueFromLinear(Single, Boolean)
- uid: TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromDecibel(System.Single,System.Boolean)
  commentId: M:TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromDecibel(System.Single,System.Boolean)
  id: GetLinearValueFromDecibel(System.Single,System.Boolean)
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: GetLinearValueFromDecibel(float, bool)
  nameWithType: AudioMixerExtensions.GetLinearValueFromDecibel(float, bool)
  fullName: TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromDecibel(float, bool)
  type: Method
  source:
    id: GetLinearValueFromDecibel
    path: ''
    startLine: 36001
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nReturns the linear value from a decibel value.\n"
  example: []
  syntax:
    content: public static float GetLinearValueFromDecibel(float decibel, bool clamp = true)
    parameters:
    - id: decibel
      type: System.Single
      description: Volume in decibel
    - id: clamp
      type: System.Boolean
      description: 'Prevent the returned value to exceed : 0.0001f to 1f'
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function GetLinearValueFromDecibel(decibel As Single, clamp As Boolean = True) As Single
  overload: TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromDecibel*
  nameWithType.vb: AudioMixerExtensions.GetLinearValueFromDecibel(Single, Boolean)
  fullName.vb: TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromDecibel(Single, Boolean)
  name.vb: GetLinearValueFromDecibel(Single, Boolean)
- uid: TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromPercentage(System.Single,System.Boolean)
  commentId: M:TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromPercentage(System.Single,System.Boolean)
  id: GetLinearValueFromPercentage(System.Single,System.Boolean)
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: GetLinearValueFromPercentage(float, bool)
  nameWithType: AudioMixerExtensions.GetLinearValueFromPercentage(float, bool)
  fullName: TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromPercentage(float, bool)
  type: Method
  source:
    id: GetLinearValueFromPercentage
    path: ''
    startLine: 36014
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nReturns the linear value from a percentage value.\n"
  example: []
  syntax:
    content: public static float GetLinearValueFromPercentage(float percentage, bool clamp = true)
    parameters:
    - id: percentage
      type: System.Single
      description: Volume as a percentage
    - id: clamp
      type: System.Boolean
      description: 'Prevent the returned value to exceed : 0.0001f to 1f'
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function GetLinearValueFromPercentage(percentage As Single, clamp As Boolean = True) As Single
  overload: TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromPercentage*
  nameWithType.vb: AudioMixerExtensions.GetLinearValueFromPercentage(Single, Boolean)
  fullName.vb: TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromPercentage(Single, Boolean)
  name.vb: GetLinearValueFromPercentage(Single, Boolean)
- uid: TetraCreations.Core.AudioMixerExtensions.ClampLinearVolume(System.Single,System.Single,System.Single)
  commentId: M:TetraCreations.Core.AudioMixerExtensions.ClampLinearVolume(System.Single,System.Single,System.Single)
  id: ClampLinearVolume(System.Single,System.Single,System.Single)
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: ClampLinearVolume(float, float, float)
  nameWithType: AudioMixerExtensions.ClampLinearVolume(float, float, float)
  fullName: TetraCreations.Core.AudioMixerExtensions.ClampLinearVolume(float, float, float)
  type: Method
  source:
    id: ClampLinearVolume
    path: ''
    startLine: 36027
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nClamp the linear volume from 0.0001f to 1f.\n"
  example: []
  syntax:
    content: public static float ClampLinearVolume(float linear, float min = 0.0001, float max = 1)
    parameters:
    - id: linear
      type: System.Single
      description: ''
    - id: min
      type: System.Single
      description: ''
    - id: max
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function ClampLinearVolume(linear As Single, min As Single = 0.0001, max As Single = 1) As Single
  overload: TetraCreations.Core.AudioMixerExtensions.ClampLinearVolume*
  nameWithType.vb: AudioMixerExtensions.ClampLinearVolume(Single, Single, Single)
  fullName.vb: TetraCreations.Core.AudioMixerExtensions.ClampLinearVolume(Single, Single, Single)
  name.vb: ClampLinearVolume(Single, Single, Single)
- uid: TetraCreations.Core.AudioMixerExtensions.ClampDecibelVolume(System.Single,System.Single,System.Single)
  commentId: M:TetraCreations.Core.AudioMixerExtensions.ClampDecibelVolume(System.Single,System.Single,System.Single)
  id: ClampDecibelVolume(System.Single,System.Single,System.Single)
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: ClampDecibelVolume(float, float, float)
  nameWithType: AudioMixerExtensions.ClampDecibelVolume(float, float, float)
  fullName: TetraCreations.Core.AudioMixerExtensions.ClampDecibelVolume(float, float, float)
  type: Method
  source:
    id: ClampDecibelVolume
    path: ''
    startLine: 36039
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nClamp the decibel volume from -80f to 0f.\n"
  example: []
  syntax:
    content: public static float ClampDecibelVolume(float dB, float min = -80, float max = 0)
    parameters:
    - id: dB
      type: System.Single
      description: ''
    - id: min
      type: System.Single
      description: ''
    - id: max
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function ClampDecibelVolume(dB As Single, min As Single = -80, max As Single = 0) As Single
  overload: TetraCreations.Core.AudioMixerExtensions.ClampDecibelVolume*
  nameWithType.vb: AudioMixerExtensions.ClampDecibelVolume(Single, Single, Single)
  fullName.vb: TetraCreations.Core.AudioMixerExtensions.ClampDecibelVolume(Single, Single, Single)
  name.vb: ClampDecibelVolume(Single, Single, Single)
- uid: TetraCreations.Core.AudioMixerExtensions.ClampPercentageVolume(System.Single,System.Single,System.Single)
  commentId: M:TetraCreations.Core.AudioMixerExtensions.ClampPercentageVolume(System.Single,System.Single,System.Single)
  id: ClampPercentageVolume(System.Single,System.Single,System.Single)
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: ClampPercentageVolume(float, float, float)
  nameWithType: AudioMixerExtensions.ClampPercentageVolume(float, float, float)
  fullName: TetraCreations.Core.AudioMixerExtensions.ClampPercentageVolume(float, float, float)
  type: Method
  source:
    id: ClampPercentageVolume
    path: ''
    startLine: 36051
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nClamp the volume as percentage from 0% to 100%.\n"
  example: []
  syntax:
    content: public static float ClampPercentageVolume(float percentage, float min = 0, float max = 100)
    parameters:
    - id: percentage
      type: System.Single
    - id: min
      type: System.Single
      description: ''
    - id: max
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function ClampPercentageVolume(percentage As Single, min As Single = 0, max As Single = 100) As Single
  overload: TetraCreations.Core.AudioMixerExtensions.ClampPercentageVolume*
  nameWithType.vb: AudioMixerExtensions.ClampPercentageVolume(Single, Single, Single)
  fullName.vb: TetraCreations.Core.AudioMixerExtensions.ClampPercentageVolume(Single, Single, Single)
  name.vb: ClampPercentageVolume(Single, Single, Single)
- uid: TetraCreations.Core.AudioMixerExtensions.SetLinearVolume(AudioMixer,System.String,System.Single,System.Boolean)
  commentId: M:TetraCreations.Core.AudioMixerExtensions.SetLinearVolume(AudioMixer,System.String,System.Single,System.Boolean)
  id: SetLinearVolume(AudioMixer,System.String,System.Single,System.Boolean)
  isExtensionMethod: true
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: SetLinearVolume(AudioMixer, string, float, bool)
  nameWithType: AudioMixerExtensions.SetLinearVolume(AudioMixer, string, float, bool)
  fullName: TetraCreations.Core.AudioMixerExtensions.SetLinearVolume(AudioMixer, string, float, bool)
  type: Method
  source:
    id: SetLinearVolume
    path: ''
    startLine: 36065
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nSets the value of an exposed parameter while automatically converting the linear value to decibel.<br />\nDo <strong>NOT</strong> call it in <strong>Awake()</strong> it doesn&apos;t work ! (audioMixer.SetFloat() will return true even if the value does not change).<br />\nhttps://forum.unity.com/threads/audiomixer-setfloat-doesnt-work-on-awake.323880/\n"
  example: []
  syntax:
    content: public static bool SetLinearVolume(this AudioMixer audioMixer, string parameterName, float value, bool clamp = true)
    parameters:
    - id: audioMixer
      type: Global.AudioMixer
      description: ''
    - id: parameterName
      type: System.String
      description: The name of the volume exposed parameter
    - id: value
      type: System.Single
      description: The linear value
    - id: clamp
      type: System.Boolean
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function SetLinearVolume(audioMixer As AudioMixer, parameterName As String, value As Single, clamp As Boolean = True) As Boolean
  overload: TetraCreations.Core.AudioMixerExtensions.SetLinearVolume*
  nameWithType.vb: AudioMixerExtensions.SetLinearVolume(AudioMixer, String, Single, Boolean)
  fullName.vb: TetraCreations.Core.AudioMixerExtensions.SetLinearVolume(AudioMixer, String, Single, Boolean)
  name.vb: SetLinearVolume(AudioMixer, String, Single, Boolean)
- uid: TetraCreations.Core.AudioMixerExtensions.GetLinearVolume(AudioMixer,System.String,System.Single@,System.Boolean)
  commentId: M:TetraCreations.Core.AudioMixerExtensions.GetLinearVolume(AudioMixer,System.String,System.Single@,System.Boolean)
  id: GetLinearVolume(AudioMixer,System.String,System.Single@,System.Boolean)
  isExtensionMethod: true
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: GetLinearVolume(AudioMixer, string, out float, bool)
  nameWithType: AudioMixerExtensions.GetLinearVolume(AudioMixer, string, out float, bool)
  fullName: TetraCreations.Core.AudioMixerExtensions.GetLinearVolume(AudioMixer, string, out float, bool)
  type: Method
  source:
    id: GetLinearVolume
    path: ''
    startLine: 36079
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nReturns the linear value of an exposed parameter by it&apos;s name from an AudioMixer. \nWe assume the parameter is a Volume.\n"
  example: []
  syntax:
    content: public static bool GetLinearVolume(this AudioMixer audioMixer, string parameterName, out float linearValue, bool clamp = true)
    parameters:
    - id: audioMixer
      type: Global.AudioMixer
      description: ''
    - id: parameterName
      type: System.String
      description: Name of the exposed parameter
    - id: linearValue
      type: System.Single
      description: The current linear value of the volume
    - id: clamp
      type: System.Boolean
      description: If true the returned value cannot exceed 0f and 1f
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function GetLinearVolume(audioMixer As AudioMixer, parameterName As String, linearValue As Single, clamp As Boolean = True) As Boolean
  overload: TetraCreations.Core.AudioMixerExtensions.GetLinearVolume*
  nameWithType.vb: AudioMixerExtensions.GetLinearVolume(AudioMixer, String, Single, Boolean)
  fullName.vb: TetraCreations.Core.AudioMixerExtensions.GetLinearVolume(AudioMixer, String, Single, Boolean)
  name.vb: GetLinearVolume(AudioMixer, String, Single, Boolean)
- uid: TetraCreations.Core.AudioMixerExtensions.DecibelToString(System.Single)
  commentId: M:TetraCreations.Core.AudioMixerExtensions.DecibelToString(System.Single)
  id: DecibelToString(System.Single)
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: DecibelToString(float)
  nameWithType: AudioMixerExtensions.DecibelToString(float)
  fullName: TetraCreations.Core.AudioMixerExtensions.DecibelToString(float)
  type: Method
  source:
    id: DecibelToString
    path: ''
    startLine: 36091
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nReturns the decibel value as a string using the format : &quot;+0.## dbB&quot;\n"
  example: []
  syntax:
    content: public static string DecibelToString(float dB)
    parameters:
    - id: dB
      type: System.Single
      description: Value in decibel
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function DecibelToString(dB As Single) As String
  overload: TetraCreations.Core.AudioMixerExtensions.DecibelToString*
  nameWithType.vb: AudioMixerExtensions.DecibelToString(Single)
  fullName.vb: TetraCreations.Core.AudioMixerExtensions.DecibelToString(Single)
  name.vb: DecibelToString(Single)
- uid: TetraCreations.Core.AudioMixerExtensions.GetAudioMixerGroup(AudioMixer,System.String,System.String)
  commentId: M:TetraCreations.Core.AudioMixerExtensions.GetAudioMixerGroup(AudioMixer,System.String,System.String)
  id: GetAudioMixerGroup(AudioMixer,System.String,System.String)
  isExtensionMethod: true
  parent: TetraCreations.Core.AudioMixerExtensions
  langs:
  - csharp
  - vb
  name: GetAudioMixerGroup(AudioMixer, string, string)
  nameWithType: AudioMixerExtensions.GetAudioMixerGroup(AudioMixer, string, string)
  fullName: TetraCreations.Core.AudioMixerExtensions.GetAudioMixerGroup(AudioMixer, string, string)
  type: Method
  source:
    id: GetAudioMixerGroup
    path: ''
    startLine: 36104
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nReturns an AudioMixerGroup if it&apos;s name contains the word passed as parameter.\nFor example GetAudioMixerGroup(&quot;MusicVolumeParam&quot;) will find the group called &quot;Music&quot;.\n"
  example: []
  syntax:
    content: public static AudioMixerGroup GetAudioMixerGroup(this AudioMixer audioMixer, string name, string mainGroupName = "Master")
    parameters:
    - id: audioMixer
      type: Global.AudioMixer
      description: ''
    - id: name
      type: System.String
      description: The group name we are looking for.
    - id: mainGroupName
      type: System.String
      description: The main group to search in, by default it&apos;s the &quot;Master&quot; group.
    return:
      type: Global.AudioMixerGroup
      description: ''
    content.vb: Public Shared Function GetAudioMixerGroup(audioMixer As AudioMixer, name As String, mainGroupName As String = "Master") As AudioMixerGroup
  overload: TetraCreations.Core.AudioMixerExtensions.GetAudioMixerGroup*
  nameWithType.vb: AudioMixerExtensions.GetAudioMixerGroup(AudioMixer, String, String)
  fullName.vb: TetraCreations.Core.AudioMixerExtensions.GetAudioMixerGroup(AudioMixer, String, String)
  name.vb: GetAudioMixerGroup(AudioMixer, String, String)
references:
- uid: TetraCreations.Core
  commentId: N:TetraCreations.Core
  name: TetraCreations.Core
  nameWithType: TetraCreations.Core
  fullName: TetraCreations.Core
  spec.csharp:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
  spec.vb:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TetraCreations.Core.AudioMixerExtensions.GetDecibelValueFromLinear*
  commentId: Overload:TetraCreations.Core.AudioMixerExtensions.GetDecibelValueFromLinear
  name: GetDecibelValueFromLinear
  nameWithType: AudioMixerExtensions.GetDecibelValueFromLinear
  fullName: TetraCreations.Core.AudioMixerExtensions.GetDecibelValueFromLinear
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromDecibel*
  commentId: Overload:TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromDecibel
  name: GetLinearValueFromDecibel
  nameWithType: AudioMixerExtensions.GetLinearValueFromDecibel
  fullName: TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromDecibel
- uid: TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromPercentage*
  commentId: Overload:TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromPercentage
  name: GetLinearValueFromPercentage
  nameWithType: AudioMixerExtensions.GetLinearValueFromPercentage
  fullName: TetraCreations.Core.AudioMixerExtensions.GetLinearValueFromPercentage
- uid: TetraCreations.Core.AudioMixerExtensions.ClampLinearVolume*
  commentId: Overload:TetraCreations.Core.AudioMixerExtensions.ClampLinearVolume
  name: ClampLinearVolume
  nameWithType: AudioMixerExtensions.ClampLinearVolume
  fullName: TetraCreations.Core.AudioMixerExtensions.ClampLinearVolume
- uid: TetraCreations.Core.AudioMixerExtensions.ClampDecibelVolume*
  commentId: Overload:TetraCreations.Core.AudioMixerExtensions.ClampDecibelVolume
  name: ClampDecibelVolume
  nameWithType: AudioMixerExtensions.ClampDecibelVolume
  fullName: TetraCreations.Core.AudioMixerExtensions.ClampDecibelVolume
- uid: TetraCreations.Core.AudioMixerExtensions.ClampPercentageVolume*
  commentId: Overload:TetraCreations.Core.AudioMixerExtensions.ClampPercentageVolume
  name: ClampPercentageVolume
  nameWithType: AudioMixerExtensions.ClampPercentageVolume
  fullName: TetraCreations.Core.AudioMixerExtensions.ClampPercentageVolume
- uid: TetraCreations.Core.AudioMixerExtensions.SetLinearVolume*
  commentId: Overload:TetraCreations.Core.AudioMixerExtensions.SetLinearVolume
  name: SetLinearVolume
  nameWithType: AudioMixerExtensions.SetLinearVolume
  fullName: TetraCreations.Core.AudioMixerExtensions.SetLinearVolume
- uid: Global.AudioMixer
  isExternal: true
  name: AudioMixer
  nameWithType: AudioMixer
  fullName: AudioMixer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TetraCreations.Core.AudioMixerExtensions.GetLinearVolume*
  commentId: Overload:TetraCreations.Core.AudioMixerExtensions.GetLinearVolume
  name: GetLinearVolume
  nameWithType: AudioMixerExtensions.GetLinearVolume
  fullName: TetraCreations.Core.AudioMixerExtensions.GetLinearVolume
- uid: TetraCreations.Core.AudioMixerExtensions.DecibelToString*
  commentId: Overload:TetraCreations.Core.AudioMixerExtensions.DecibelToString
  name: DecibelToString
  nameWithType: AudioMixerExtensions.DecibelToString
  fullName: TetraCreations.Core.AudioMixerExtensions.DecibelToString
- uid: TetraCreations.Core.AudioMixerExtensions.GetAudioMixerGroup*
  commentId: Overload:TetraCreations.Core.AudioMixerExtensions.GetAudioMixerGroup
  name: GetAudioMixerGroup
  nameWithType: AudioMixerExtensions.GetAudioMixerGroup
  fullName: TetraCreations.Core.AudioMixerExtensions.GetAudioMixerGroup
- uid: Global.AudioMixerGroup
  commentId: '!:Global.AudioMixerGroup'
  isExternal: true
  name: AudioMixerGroup
  nameWithType: AudioMixerGroup
  fullName: AudioMixerGroup
