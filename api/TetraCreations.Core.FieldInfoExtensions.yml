### YamlMime:ManagedReference
items:
- uid: TetraCreations.Core.FieldInfoExtensions
  commentId: T:TetraCreations.Core.FieldInfoExtensions
  id: FieldInfoExtensions
  parent: TetraCreations.Core
  children:
  - TetraCreations.Core.FieldInfoExtensions.GetRawValue(FieldInfo)
  langs:
  - csharp
  - vb
  name: FieldInfoExtensions
  nameWithType: FieldInfoExtensions
  fullName: TetraCreations.Core.FieldInfoExtensions
  type: Class
  source:
    id: FieldInfoExtensions
    path: ''
    startLine: 36942
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  syntax:
    content: public static class FieldInfoExtensions
    content.vb: Public Module FieldInfoExtensions
  inheritance:
  - System.Object
- uid: TetraCreations.Core.FieldInfoExtensions.GetRawValue(FieldInfo)
  commentId: M:TetraCreations.Core.FieldInfoExtensions.GetRawValue(FieldInfo)
  id: GetRawValue(FieldInfo)
  isExtensionMethod: true
  parent: TetraCreations.Core.FieldInfoExtensions
  langs:
  - csharp
  - vb
  name: GetRawValue(FieldInfo)
  nameWithType: FieldInfoExtensions.GetRawValue(FieldInfo)
  fullName: TetraCreations.Core.FieldInfoExtensions.GetRawValue(FieldInfo)
  type: Method
  source:
    id: GetRawValue
    path: ''
    startLine: 36947
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nReturns a long by default to cover both 32 bits and 64 bits enums.\n"
  example: []
  syntax:
    content: public static long GetRawValue(this FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: Global.FieldInfo
    return:
      type: System.Int64
    content.vb: Public Shared Function GetRawValue(fieldInfo As FieldInfo) As Long
  overload: TetraCreations.Core.FieldInfoExtensions.GetRawValue*
references:
- uid: TetraCreations.Core
  commentId: N:TetraCreations.Core
  name: TetraCreations.Core
  nameWithType: TetraCreations.Core
  fullName: TetraCreations.Core
  spec.csharp:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
  spec.vb:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TetraCreations.Core.FieldInfoExtensions.GetRawValue*
  commentId: Overload:TetraCreations.Core.FieldInfoExtensions.GetRawValue
  name: GetRawValue
  nameWithType: FieldInfoExtensions.GetRawValue
  fullName: TetraCreations.Core.FieldInfoExtensions.GetRawValue
- uid: Global.FieldInfo
  commentId: '!:Global.FieldInfo'
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: FieldInfo
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
