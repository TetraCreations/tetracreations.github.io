### YamlMime:ManagedReference
items:
- uid: TetraCreations.Core.ImageExtensions
  commentId: T:TetraCreations.Core.ImageExtensions
  id: ImageExtensions
  parent: TetraCreations.Core
  children:
  - TetraCreations.Core.ImageExtensions.Alpha(Image,System.Single)
  - TetraCreations.Core.ImageExtensions.Color(Image,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})
  langs:
  - csharp
  - vb
  name: ImageExtensions
  nameWithType: ImageExtensions
  fullName: TetraCreations.Core.ImageExtensions
  type: Class
  source:
    id: ImageExtensions
    path: ''
    startLine: 37301
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  syntax:
    content: public static class ImageExtensions
    content.vb: Public Module ImageExtensions
  inheritance:
  - System.Object
- uid: TetraCreations.Core.ImageExtensions.Alpha(Image,System.Single)
  commentId: M:TetraCreations.Core.ImageExtensions.Alpha(Image,System.Single)
  id: Alpha(Image,System.Single)
  isExtensionMethod: true
  parent: TetraCreations.Core.ImageExtensions
  langs:
  - csharp
  - vb
  name: Alpha(Image, float)
  nameWithType: ImageExtensions.Alpha(Image, float)
  fullName: TetraCreations.Core.ImageExtensions.Alpha(Image, float)
  type: Method
  source:
    id: Alpha
    path: ''
    startLine: 37309
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nChanges the transparency of the image color<br />\n0f is transparent, 1f is opaque\n"
  example: []
  syntax:
    content: public static void Alpha(this Image image, float transparency)
    parameters:
    - id: image
      type: Global.Image
      description: ''
    - id: transparency
      type: System.Single
      description: ''
    content.vb: Public Shared Sub Alpha(image As Image, transparency As Single)
  overload: TetraCreations.Core.ImageExtensions.Alpha*
  nameWithType.vb: ImageExtensions.Alpha(Image, Single)
  fullName.vb: TetraCreations.Core.ImageExtensions.Alpha(Image, Single)
  name.vb: Alpha(Image, Single)
- uid: TetraCreations.Core.ImageExtensions.Color(Image,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})
  commentId: M:TetraCreations.Core.ImageExtensions.Color(Image,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})
  id: Color(Image,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})
  isExtensionMethod: true
  parent: TetraCreations.Core.ImageExtensions
  langs:
  - csharp
  - vb
  name: Color(Image, float?, float?, float?, float?)
  nameWithType: ImageExtensions.Color(Image, float?, float?, float?, float?)
  fullName: TetraCreations.Core.ImageExtensions.Color(Image, float?, float?, float?, float?)
  type: Method
  source:
    id: Color
    path: ''
    startLine: 37324
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nChanges the RGBA elements of the image color<br />\n"
  example: []
  syntax:
    content: public static void Color(this Image image, float? r = null, float? g = null, float? b = null, float? a = null)
    parameters:
    - id: image
      type: Global.Image
      description: ''
    - id: r
      type: System.Nullable{System.Single}
      description: ''
    - id: g
      type: System.Nullable{System.Single}
      description: ''
    - id: b
      type: System.Nullable{System.Single}
      description: ''
    - id: a
      type: System.Nullable{System.Single}
      description: ''
    content.vb: Public Shared Sub Color(image As Image, r As Single? = Nothing, g As Single? = Nothing, b As Single? = Nothing, a As Single? = Nothing)
  overload: TetraCreations.Core.ImageExtensions.Color*
  nameWithType.vb: ImageExtensions.Color(Image, Single?, Single?, Single?, Single?)
  fullName.vb: TetraCreations.Core.ImageExtensions.Color(Image, Single?, Single?, Single?, Single?)
  name.vb: Color(Image, Single?, Single?, Single?, Single?)
references:
- uid: TetraCreations.Core
  commentId: N:TetraCreations.Core
  name: TetraCreations.Core
  nameWithType: TetraCreations.Core
  fullName: TetraCreations.Core
  spec.csharp:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
  spec.vb:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TetraCreations.Core.ImageExtensions.Alpha*
  commentId: Overload:TetraCreations.Core.ImageExtensions.Alpha
  name: Alpha
  nameWithType: ImageExtensions.Alpha
  fullName: TetraCreations.Core.ImageExtensions.Alpha
- uid: Global.Image
  isExternal: true
  name: Image
  nameWithType: Image
  fullName: Image
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TetraCreations.Core.ImageExtensions.Color*
  commentId: Overload:TetraCreations.Core.ImageExtensions.Color
  name: Color
  nameWithType: ImageExtensions.Color
  fullName: TetraCreations.Core.ImageExtensions.Color
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  name: float?
  nameWithType: float?
  fullName: float?
  nameWithType.vb: Single?
  fullName.vb: Single?
  name.vb: Single?
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
