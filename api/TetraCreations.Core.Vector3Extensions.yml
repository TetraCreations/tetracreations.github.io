### YamlMime:ManagedReference
items:
- uid: TetraCreations.Core.Vector3Extensions
  commentId: T:TetraCreations.Core.Vector3Extensions
  id: Vector3Extensions
  parent: TetraCreations.Core
  children:
  - TetraCreations.Core.Vector3Extensions.Add(Vector3,System.Single,System.Single,System.Single)
  - TetraCreations.Core.Vector3Extensions.Copy(Vector3)
  - TetraCreations.Core.Vector3Extensions.GetPointOnUnitSphereCap(Quaternion,System.Single)
  - TetraCreations.Core.Vector3Extensions.GetPointOnUnitSphereCap(Vector3,System.Single)
  - TetraCreations.Core.Vector3Extensions.Log(Vector3,System.String)
  - TetraCreations.Core.Vector3Extensions.ToString(Vector3)
  - TetraCreations.Core.Vector3Extensions.With(Vector3,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})
  langs:
  - csharp
  - vb
  name: Vector3Extensions
  nameWithType: Vector3Extensions
  fullName: TetraCreations.Core.Vector3Extensions
  type: Class
  source:
    id: Vector3Extensions
    path: ''
    startLine: 38659
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  syntax:
    content: public static class Vector3Extensions
    content.vb: Public Module Vector3Extensions
  inheritance:
  - System.Object
- uid: TetraCreations.Core.Vector3Extensions.With(Vector3,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})
  commentId: M:TetraCreations.Core.Vector3Extensions.With(Vector3,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})
  id: With(Vector3,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})
  isExtensionMethod: true
  parent: TetraCreations.Core.Vector3Extensions
  langs:
  - csharp
  - vb
  name: With(Vector3, float?, float?, float?)
  nameWithType: Vector3Extensions.With(Vector3, float?, float?, float?)
  fullName: TetraCreations.Core.Vector3Extensions.With(Vector3, float?, float?, float?)
  type: Method
  source:
    id: With
    path: ''
    startLine: 38669
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nReturns a new Vector3 while changing/keeping any value from the original vector (x, y, z).\n"
  example: []
  syntax:
    content: public static Vector3 With(this Vector3 vector, float? x = null, float? y = null, float? z = null)
    parameters:
    - id: vector
      type: Global.Vector3
      description: ''
    - id: x
      type: System.Nullable{System.Single}
      description: ''
    - id: y
      type: System.Nullable{System.Single}
      description: ''
    - id: z
      type: System.Nullable{System.Single}
      description: ''
    return:
      type: Global.Vector3
      description: ''
    content.vb: Public Shared Function [With](vector As Vector3, x As Single? = Nothing, y As Single? = Nothing, z As Single? = Nothing) As Vector3
  overload: TetraCreations.Core.Vector3Extensions.With*
  nameWithType.vb: Vector3Extensions.With(Vector3, Single?, Single?, Single?)
  fullName.vb: TetraCreations.Core.Vector3Extensions.With(Vector3, Single?, Single?, Single?)
  name.vb: With(Vector3, Single?, Single?, Single?)
- uid: TetraCreations.Core.Vector3Extensions.Add(Vector3,System.Single,System.Single,System.Single)
  commentId: M:TetraCreations.Core.Vector3Extensions.Add(Vector3,System.Single,System.Single,System.Single)
  id: Add(Vector3,System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: TetraCreations.Core.Vector3Extensions
  langs:
  - csharp
  - vb
  name: Add(Vector3, float, float, float)
  nameWithType: Vector3Extensions.Add(Vector3, float, float, float)
  fullName: TetraCreations.Core.Vector3Extensions.Add(Vector3, float, float, float)
  type: Method
  source:
    id: Add
    path: ''
    startLine: 38682
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nIncrease/Decrease any point in the vector (x, y, z) without changing the others.\n"
  example: []
  syntax:
    content: public static Vector3 Add(this Vector3 vector, float x = 0, float y = 0, float z = 0)
    parameters:
    - id: vector
      type: Global.Vector3
      description: ''
    - id: x
      type: System.Single
      description: ''
    - id: y
      type: System.Single
      description: ''
    - id: z
      type: System.Single
      description: ''
    return:
      type: Global.Vector3
      description: ''
    content.vb: Public Shared Function Add(vector As Vector3, x As Single = 0, y As Single = 0, z As Single = 0) As Vector3
  overload: TetraCreations.Core.Vector3Extensions.Add*
  nameWithType.vb: Vector3Extensions.Add(Vector3, Single, Single, Single)
  fullName.vb: TetraCreations.Core.Vector3Extensions.Add(Vector3, Single, Single, Single)
  name.vb: Add(Vector3, Single, Single, Single)
- uid: TetraCreations.Core.Vector3Extensions.Copy(Vector3)
  commentId: M:TetraCreations.Core.Vector3Extensions.Copy(Vector3)
  id: Copy(Vector3)
  isExtensionMethod: true
  parent: TetraCreations.Core.Vector3Extensions
  langs:
  - csharp
  - vb
  name: Copy(Vector3)
  nameWithType: Vector3Extensions.Copy(Vector3)
  fullName: TetraCreations.Core.Vector3Extensions.Copy(Vector3)
  type: Method
  source:
    id: Copy
    path: ''
    startLine: 38692
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nReturns a copy of the Vector3\n"
  example: []
  syntax:
    content: public static Vector3 Copy(this Vector3 vector)
    parameters:
    - id: vector
      type: Global.Vector3
      description: ''
    return:
      type: Global.Vector3
      description: ''
    content.vb: Public Shared Function Copy(vector As Vector3) As Vector3
  overload: TetraCreations.Core.Vector3Extensions.Copy*
- uid: TetraCreations.Core.Vector3Extensions.GetPointOnUnitSphereCap(Quaternion,System.Single)
  commentId: M:TetraCreations.Core.Vector3Extensions.GetPointOnUnitSphereCap(Quaternion,System.Single)
  id: GetPointOnUnitSphereCap(Quaternion,System.Single)
  parent: TetraCreations.Core.Vector3Extensions
  langs:
  - csharp
  - vb
  name: GetPointOnUnitSphereCap(Quaternion, float)
  nameWithType: Vector3Extensions.GetPointOnUnitSphereCap(Quaternion, float)
  fullName: TetraCreations.Core.Vector3Extensions.GetPointOnUnitSphereCap(Quaternion, float)
  type: Method
  source:
    id: GetPointOnUnitSphereCap
    path: ''
    startLine: 38703
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nGet a random point on a sphare cap, limited by an angle\n"
  example: []
  syntax:
    content: public static Vector3 GetPointOnUnitSphereCap(Quaternion targetDirection, float angle)
    parameters:
    - id: targetDirection
      type: Global.Quaternion
      description: ''
    - id: angle
      type: System.Single
      description: ''
    return:
      type: Global.Vector3
      description: ''
    content.vb: Public Shared Function GetPointOnUnitSphereCap(targetDirection As Quaternion, angle As Single) As Vector3
  overload: TetraCreations.Core.Vector3Extensions.GetPointOnUnitSphereCap*
  nameWithType.vb: Vector3Extensions.GetPointOnUnitSphereCap(Quaternion, Single)
  fullName.vb: TetraCreations.Core.Vector3Extensions.GetPointOnUnitSphereCap(Quaternion, Single)
  name.vb: GetPointOnUnitSphereCap(Quaternion, Single)
- uid: TetraCreations.Core.Vector3Extensions.GetPointOnUnitSphereCap(Vector3,System.Single)
  commentId: M:TetraCreations.Core.Vector3Extensions.GetPointOnUnitSphereCap(Vector3,System.Single)
  id: GetPointOnUnitSphereCap(Vector3,System.Single)
  parent: TetraCreations.Core.Vector3Extensions
  langs:
  - csharp
  - vb
  name: GetPointOnUnitSphereCap(Vector3, float)
  nameWithType: Vector3Extensions.GetPointOnUnitSphereCap(Vector3, float)
  fullName: TetraCreations.Core.Vector3Extensions.GetPointOnUnitSphereCap(Vector3, float)
  type: Method
  source:
    id: GetPointOnUnitSphereCap
    path: ''
    startLine: 38717
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nGet a random point on a sphare cap, limited by an angle using Quaternion.LookRotation(targetDirection) as target direction\n"
  example: []
  syntax:
    content: public static Vector3 GetPointOnUnitSphereCap(Vector3 targetDirection, float angle)
    parameters:
    - id: targetDirection
      type: Global.Vector3
      description: ''
    - id: angle
      type: System.Single
      description: ''
    return:
      type: Global.Vector3
      description: ''
    content.vb: Public Shared Function GetPointOnUnitSphereCap(targetDirection As Vector3, angle As Single) As Vector3
  overload: TetraCreations.Core.Vector3Extensions.GetPointOnUnitSphereCap*
  nameWithType.vb: Vector3Extensions.GetPointOnUnitSphereCap(Vector3, Single)
  fullName.vb: TetraCreations.Core.Vector3Extensions.GetPointOnUnitSphereCap(Vector3, Single)
  name.vb: GetPointOnUnitSphereCap(Vector3, Single)
- uid: TetraCreations.Core.Vector3Extensions.ToString(Vector3)
  commentId: M:TetraCreations.Core.Vector3Extensions.ToString(Vector3)
  id: ToString(Vector3)
  isExtensionMethod: true
  parent: TetraCreations.Core.Vector3Extensions
  langs:
  - csharp
  - vb
  name: ToString(Vector3)
  nameWithType: Vector3Extensions.ToString(Vector3)
  fullName: TetraCreations.Core.Vector3Extensions.ToString(Vector3)
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 38727
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nConverts a Vector3 to a string in X, Y, Z format\n"
  example: []
  syntax:
    content: public static string ToString(this Vector3 vector)
    parameters:
    - id: vector
      type: Global.Vector3
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function ToString(vector As Vector3) As String
  overload: TetraCreations.Core.Vector3Extensions.ToString*
- uid: TetraCreations.Core.Vector3Extensions.Log(Vector3,System.String)
  commentId: M:TetraCreations.Core.Vector3Extensions.Log(Vector3,System.String)
  id: Log(Vector3,System.String)
  isExtensionMethod: true
  parent: TetraCreations.Core.Vector3Extensions
  langs:
  - csharp
  - vb
  name: Log(Vector3, string)
  nameWithType: Vector3Extensions.Log(Vector3, string)
  fullName: TetraCreations.Core.Vector3Extensions.Log(Vector3, string)
  type: Method
  source:
    id: Log
    path: ''
    startLine: 38738
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nShow the Vector3 values in the console\n"
  example: []
  syntax:
    content: public static void Log(this Vector3 vector, string prefix = "Vector3")
    parameters:
    - id: vector
      type: Global.Vector3
      description: ''
    - id: prefix
      type: System.String
      description: Text to show before the values
    content.vb: Public Shared Sub Log(vector As Vector3, prefix As String = "Vector3")
  overload: TetraCreations.Core.Vector3Extensions.Log*
  nameWithType.vb: Vector3Extensions.Log(Vector3, String)
  fullName.vb: TetraCreations.Core.Vector3Extensions.Log(Vector3, String)
  name.vb: Log(Vector3, String)
references:
- uid: TetraCreations.Core
  commentId: N:TetraCreations.Core
  name: TetraCreations.Core
  nameWithType: TetraCreations.Core
  fullName: TetraCreations.Core
  spec.csharp:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
  spec.vb:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TetraCreations.Core.Vector3Extensions.With*
  commentId: Overload:TetraCreations.Core.Vector3Extensions.With
  name: With
  nameWithType: Vector3Extensions.With
  fullName: TetraCreations.Core.Vector3Extensions.With
- uid: Global.Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  name: float?
  nameWithType: float?
  fullName: float?
  nameWithType.vb: Single?
  fullName.vb: Single?
  name.vb: Single?
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TetraCreations.Core.Vector3Extensions.Add*
  commentId: Overload:TetraCreations.Core.Vector3Extensions.Add
  name: Add
  nameWithType: Vector3Extensions.Add
  fullName: TetraCreations.Core.Vector3Extensions.Add
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TetraCreations.Core.Vector3Extensions.Copy*
  commentId: Overload:TetraCreations.Core.Vector3Extensions.Copy
  name: Copy
  nameWithType: Vector3Extensions.Copy
  fullName: TetraCreations.Core.Vector3Extensions.Copy
- uid: TetraCreations.Core.Vector3Extensions.GetPointOnUnitSphereCap*
  commentId: Overload:TetraCreations.Core.Vector3Extensions.GetPointOnUnitSphereCap
  name: GetPointOnUnitSphereCap
  nameWithType: Vector3Extensions.GetPointOnUnitSphereCap
  fullName: TetraCreations.Core.Vector3Extensions.GetPointOnUnitSphereCap
- uid: Global.Quaternion
  isExternal: true
  name: Quaternion
  nameWithType: Quaternion
  fullName: Quaternion
- uid: TetraCreations.Core.Vector3Extensions.ToString*
  commentId: Overload:TetraCreations.Core.Vector3Extensions.ToString
  name: ToString
  nameWithType: Vector3Extensions.ToString
  fullName: TetraCreations.Core.Vector3Extensions.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TetraCreations.Core.Vector3Extensions.Log*
  commentId: Overload:TetraCreations.Core.Vector3Extensions.Log
  name: Log
  nameWithType: Vector3Extensions.Log
  fullName: TetraCreations.Core.Vector3Extensions.Log
