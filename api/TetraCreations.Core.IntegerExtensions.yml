### YamlMime:ManagedReference
items:
- uid: TetraCreations.Core.IntegerExtensions
  commentId: T:TetraCreations.Core.IntegerExtensions
  id: IntegerExtensions
  parent: TetraCreations.Core
  children:
  - TetraCreations.Core.IntegerExtensions.Clamp(System.Int32@,System.Int32,System.Int32)
  - TetraCreations.Core.IntegerExtensions.IsEven(System.Int32)
  - TetraCreations.Core.IntegerExtensions.IsOdd(System.Int32)
  langs:
  - csharp
  - vb
  name: IntegerExtensions
  nameWithType: IntegerExtensions
  fullName: TetraCreations.Core.IntegerExtensions
  type: Class
  source:
    id: IntegerExtensions
    path: ''
    startLine: 37335
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  syntax:
    content: public static class IntegerExtensions
    content.vb: Public Module IntegerExtensions
  inheritance:
  - System.Object
- uid: TetraCreations.Core.IntegerExtensions.Clamp(System.Int32@,System.Int32,System.Int32)
  commentId: M:TetraCreations.Core.IntegerExtensions.Clamp(System.Int32@,System.Int32,System.Int32)
  id: Clamp(System.Int32@,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: TetraCreations.Core.IntegerExtensions
  langs:
  - csharp
  - vb
  name: Clamp(ref int, int, int)
  nameWithType: IntegerExtensions.Clamp(ref int, int, int)
  fullName: TetraCreations.Core.IntegerExtensions.Clamp(ref int, int, int)
  type: Method
  source:
    id: Clamp
    path: ''
    startLine: 37343
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nClamp the integer reference by a minimum and a maximum value\n"
  example: []
  syntax:
    content: public static void Clamp(this ref int integer, int minimum, int maximum)
    parameters:
    - id: integer
      type: System.Int32
      description: ''
    - id: minimum
      type: System.Int32
      description: ''
    - id: maximum
      type: System.Int32
      description: ''
    content.vb: Public Shared Sub Clamp([integer] As Integer, minimum As Integer, maximum As Integer)
  overload: TetraCreations.Core.IntegerExtensions.Clamp*
  nameWithType.vb: IntegerExtensions.Clamp(Integer, Integer, Integer)
  fullName.vb: TetraCreations.Core.IntegerExtensions.Clamp(Integer, Integer, Integer)
  name.vb: Clamp(Integer, Integer, Integer)
- uid: TetraCreations.Core.IntegerExtensions.IsEven(System.Int32)
  commentId: M:TetraCreations.Core.IntegerExtensions.IsEven(System.Int32)
  id: IsEven(System.Int32)
  isExtensionMethod: true
  parent: TetraCreations.Core.IntegerExtensions
  langs:
  - csharp
  - vb
  name: IsEven(int)
  nameWithType: IntegerExtensions.IsEven(int)
  fullName: TetraCreations.Core.IntegerExtensions.IsEven(int)
  type: Method
  source:
    id: IsEven
    path: ''
    startLine: 37353
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nDetermines if the integer is even or not\n"
  example: []
  syntax:
    content: public static bool IsEven(this int integer)
    parameters:
    - id: integer
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: true if even, false if not.
    content.vb: Public Shared Function IsEven([integer] As Integer) As Boolean
  overload: TetraCreations.Core.IntegerExtensions.IsEven*
  nameWithType.vb: IntegerExtensions.IsEven(Integer)
  fullName.vb: TetraCreations.Core.IntegerExtensions.IsEven(Integer)
  name.vb: IsEven(Integer)
- uid: TetraCreations.Core.IntegerExtensions.IsOdd(System.Int32)
  commentId: M:TetraCreations.Core.IntegerExtensions.IsOdd(System.Int32)
  id: IsOdd(System.Int32)
  isExtensionMethod: true
  parent: TetraCreations.Core.IntegerExtensions
  langs:
  - csharp
  - vb
  name: IsOdd(int)
  nameWithType: IntegerExtensions.IsOdd(int)
  fullName: TetraCreations.Core.IntegerExtensions.IsOdd(int)
  type: Method
  source:
    id: IsOdd
    path: ''
    startLine: 37363
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nDetermines if the integer is odd or not\n"
  example: []
  syntax:
    content: public static bool IsOdd(this int integer)
    parameters:
    - id: integer
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: true if odd, false if not.
    content.vb: Public Shared Function IsOdd([integer] As Integer) As Boolean
  overload: TetraCreations.Core.IntegerExtensions.IsOdd*
  nameWithType.vb: IntegerExtensions.IsOdd(Integer)
  fullName.vb: TetraCreations.Core.IntegerExtensions.IsOdd(Integer)
  name.vb: IsOdd(Integer)
references:
- uid: TetraCreations.Core
  commentId: N:TetraCreations.Core
  name: TetraCreations.Core
  nameWithType: TetraCreations.Core
  fullName: TetraCreations.Core
  spec.csharp:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
  spec.vb:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TetraCreations.Core.IntegerExtensions.Clamp*
  commentId: Overload:TetraCreations.Core.IntegerExtensions.Clamp
  name: Clamp
  nameWithType: IntegerExtensions.Clamp
  fullName: TetraCreations.Core.IntegerExtensions.Clamp
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TetraCreations.Core.IntegerExtensions.IsEven*
  commentId: Overload:TetraCreations.Core.IntegerExtensions.IsEven
  name: IsEven
  nameWithType: IntegerExtensions.IsEven
  fullName: TetraCreations.Core.IntegerExtensions.IsEven
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TetraCreations.Core.IntegerExtensions.IsOdd*
  commentId: Overload:TetraCreations.Core.IntegerExtensions.IsOdd
  name: IsOdd
  nameWithType: IntegerExtensions.IsOdd
  fullName: TetraCreations.Core.IntegerExtensions.IsOdd
