### YamlMime:ManagedReference
items:
- uid: TetraCreations.Core.Utility.LayerMaskFilter
  commentId: T:TetraCreations.Core.Utility.LayerMaskFilter
  id: LayerMaskFilter
  parent: TetraCreations.Core.Utility
  children:
  - TetraCreations.Core.Utility.LayerMaskFilter.AcceptedLayer(System.Int32)
  - TetraCreations.Core.Utility.LayerMaskFilter.ExcludedLayerMask
  - TetraCreations.Core.Utility.LayerMaskFilter.Exclusive
  - TetraCreations.Core.Utility.LayerMaskFilter.IncludedLayerMask
  - TetraCreations.Core.Utility.LayerMaskFilter.Inclusive
  - TetraCreations.Core.Utility.LayerMaskFilter.IsExcluded(System.Int32)
  - TetraCreations.Core.Utility.LayerMaskFilter.IsIncluded(System.Int32)
  langs:
  - csharp
  - vb
  name: LayerMaskFilter
  nameWithType: LayerMaskFilter
  fullName: TetraCreations.Core.Utility.LayerMaskFilter
  type: Class
  source:
    id: LayerMaskFilter
    path: ''
    startLine: 38980
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nUsed to filter GameObjects by their LayerMask, we can use an inclusive layer so the GameObject need at least one layer from it to be accepted.<br />\nWe can also exlude a GameObject when it has at least one layer set inside the ExcludedLayerMask.<br />\nOr we can use a combination of both for example you may have objects using the layer &apos;Enemy&apos; and others that use &apos;Enemy&apos; and &apos;Boss&apos;.<br />\nAnd if you want to detect &apos;Enemy&apos; only, you set the bit in the Inclusive mask, and set the &apos;Boss&apos; bit inside the exclusive layer mask.<br />\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class LayerMaskFilter
    content.vb: >-
      <Serializable>

      Public Class LayerMaskFilter
  inheritance:
  - System.Object
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: TetraCreations.Core.Utility.LayerMaskFilter.Inclusive
  commentId: F:TetraCreations.Core.Utility.LayerMaskFilter.Inclusive
  id: Inclusive
  parent: TetraCreations.Core.Utility.LayerMaskFilter
  langs:
  - csharp
  - vb
  name: Inclusive
  nameWithType: LayerMaskFilter.Inclusive
  fullName: TetraCreations.Core.Utility.LayerMaskFilter.Inclusive
  type: Field
  source:
    id: Inclusive
    path: ''
    startLine: 38984
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public bool Inclusive
    return:
      type: System.Boolean
    content.vb: Public Inclusive As Boolean
- uid: TetraCreations.Core.Utility.LayerMaskFilter.Exclusive
  commentId: F:TetraCreations.Core.Utility.LayerMaskFilter.Exclusive
  id: Exclusive
  parent: TetraCreations.Core.Utility.LayerMaskFilter
  langs:
  - csharp
  - vb
  name: Exclusive
  nameWithType: LayerMaskFilter.Exclusive
  fullName: TetraCreations.Core.Utility.LayerMaskFilter.Exclusive
  type: Field
  source:
    id: Exclusive
    path: ''
    startLine: 38985
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public bool Exclusive
    return:
      type: System.Boolean
    content.vb: Public Exclusive As Boolean
- uid: TetraCreations.Core.Utility.LayerMaskFilter.IncludedLayerMask
  commentId: F:TetraCreations.Core.Utility.LayerMaskFilter.IncludedLayerMask
  id: IncludedLayerMask
  parent: TetraCreations.Core.Utility.LayerMaskFilter
  langs:
  - csharp
  - vb
  name: IncludedLayerMask
  nameWithType: LayerMaskFilter.IncludedLayerMask
  fullName: TetraCreations.Core.Utility.LayerMaskFilter.IncludedLayerMask
  type: Field
  source:
    id: IncludedLayerMask
    path: ''
    startLine: 38989
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public LayerMask IncludedLayerMask
    return:
      type: Global.LayerMask
    content.vb: Public IncludedLayerMask As LayerMask
- uid: TetraCreations.Core.Utility.LayerMaskFilter.ExcludedLayerMask
  commentId: F:TetraCreations.Core.Utility.LayerMaskFilter.ExcludedLayerMask
  id: ExcludedLayerMask
  parent: TetraCreations.Core.Utility.LayerMaskFilter
  langs:
  - csharp
  - vb
  name: ExcludedLayerMask
  nameWithType: LayerMaskFilter.ExcludedLayerMask
  fullName: TetraCreations.Core.Utility.LayerMaskFilter.ExcludedLayerMask
  type: Field
  source:
    id: ExcludedLayerMask
    path: ''
    startLine: 38991
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  syntax:
    content: public LayerMask ExcludedLayerMask
    return:
      type: Global.LayerMask
    content.vb: Public ExcludedLayerMask As LayerMask
- uid: TetraCreations.Core.Utility.LayerMaskFilter.IsIncluded(System.Int32)
  commentId: M:TetraCreations.Core.Utility.LayerMaskFilter.IsIncluded(System.Int32)
  id: IsIncluded(System.Int32)
  parent: TetraCreations.Core.Utility.LayerMaskFilter
  langs:
  - csharp
  - vb
  name: IsIncluded(int)
  nameWithType: LayerMaskFilter.IsIncluded(int)
  fullName: TetraCreations.Core.Utility.LayerMaskFilter.IsIncluded(int)
  type: Method
  source:
    id: IsIncluded
    path: ''
    startLine: 38999
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nDetermines if a layer is set inside the IncludedLayerMask.<br />\nAlways returns true when Inclusive option is false.\n"
  example: []
  syntax:
    content: public bool IsIncluded(int layer)
    parameters:
    - id: layer
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsIncluded(layer As Integer) As Boolean
  overload: TetraCreations.Core.Utility.LayerMaskFilter.IsIncluded*
  nameWithType.vb: LayerMaskFilter.IsIncluded(Integer)
  fullName.vb: TetraCreations.Core.Utility.LayerMaskFilter.IsIncluded(Integer)
  name.vb: IsIncluded(Integer)
- uid: TetraCreations.Core.Utility.LayerMaskFilter.IsExcluded(System.Int32)
  commentId: M:TetraCreations.Core.Utility.LayerMaskFilter.IsExcluded(System.Int32)
  id: IsExcluded(System.Int32)
  parent: TetraCreations.Core.Utility.LayerMaskFilter
  langs:
  - csharp
  - vb
  name: IsExcluded(int)
  nameWithType: LayerMaskFilter.IsExcluded(int)
  fullName: TetraCreations.Core.Utility.LayerMaskFilter.IsExcluded(int)
  type: Method
  source:
    id: IsExcluded
    path: ''
    startLine: 39012
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nDetermines if a layer is set inside the ExcludedLayerMask.<br />\nAlways returns false when Exclusive option is false.\n"
  example: []
  syntax:
    content: public bool IsExcluded(int layer)
    parameters:
    - id: layer
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsExcluded(layer As Integer) As Boolean
  overload: TetraCreations.Core.Utility.LayerMaskFilter.IsExcluded*
  nameWithType.vb: LayerMaskFilter.IsExcluded(Integer)
  fullName.vb: TetraCreations.Core.Utility.LayerMaskFilter.IsExcluded(Integer)
  name.vb: IsExcluded(Integer)
- uid: TetraCreations.Core.Utility.LayerMaskFilter.AcceptedLayer(System.Int32)
  commentId: M:TetraCreations.Core.Utility.LayerMaskFilter.AcceptedLayer(System.Int32)
  id: AcceptedLayer(System.Int32)
  parent: TetraCreations.Core.Utility.LayerMaskFilter
  langs:
  - csharp
  - vb
  name: AcceptedLayer(int)
  nameWithType: LayerMaskFilter.AcceptedLayer(int)
  fullName: TetraCreations.Core.Utility.LayerMaskFilter.AcceptedLayer(int)
  type: Method
  source:
    id: AcceptedLayer
    path: ''
    startLine: 39024
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core.Utility
  summary: "\nDetermines if a layer is included and not excluded\n"
  example: []
  syntax:
    content: public bool AcceptedLayer(int layer)
    parameters:
    - id: layer
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function AcceptedLayer(layer As Integer) As Boolean
  overload: TetraCreations.Core.Utility.LayerMaskFilter.AcceptedLayer*
  nameWithType.vb: LayerMaskFilter.AcceptedLayer(Integer)
  fullName.vb: TetraCreations.Core.Utility.LayerMaskFilter.AcceptedLayer(Integer)
  name.vb: AcceptedLayer(Integer)
references:
- uid: TetraCreations.Core.Utility
  commentId: N:TetraCreations.Core.Utility
  name: TetraCreations.Core.Utility
  nameWithType: TetraCreations.Core.Utility
  fullName: TetraCreations.Core.Utility
  spec.csharp:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
  - name: .
  - uid: TetraCreations.Core.Utility
    name: Utility
  spec.vb:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
  - name: .
  - uid: TetraCreations.Core.Utility
    name: Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.LayerMask
  isExternal: true
  name: LayerMask
  nameWithType: LayerMask
  fullName: LayerMask
- uid: TetraCreations.Core.Utility.LayerMaskFilter.IsIncluded*
  commentId: Overload:TetraCreations.Core.Utility.LayerMaskFilter.IsIncluded
  name: IsIncluded
  nameWithType: LayerMaskFilter.IsIncluded
  fullName: TetraCreations.Core.Utility.LayerMaskFilter.IsIncluded
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TetraCreations.Core.Utility.LayerMaskFilter.IsExcluded*
  commentId: Overload:TetraCreations.Core.Utility.LayerMaskFilter.IsExcluded
  name: IsExcluded
  nameWithType: LayerMaskFilter.IsExcluded
  fullName: TetraCreations.Core.Utility.LayerMaskFilter.IsExcluded
- uid: TetraCreations.Core.Utility.LayerMaskFilter.AcceptedLayer*
  commentId: Overload:TetraCreations.Core.Utility.LayerMaskFilter.AcceptedLayer
  name: AcceptedLayer
  nameWithType: LayerMaskFilter.AcceptedLayer
  fullName: TetraCreations.Core.Utility.LayerMaskFilter.AcceptedLayer
