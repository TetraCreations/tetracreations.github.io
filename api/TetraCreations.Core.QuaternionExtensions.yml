### YamlMime:ManagedReference
items:
- uid: TetraCreations.Core.QuaternionExtensions
  commentId: T:TetraCreations.Core.QuaternionExtensions
  id: QuaternionExtensions
  parent: TetraCreations.Core
  children:
  - TetraCreations.Core.QuaternionExtensions.Add(Quaternion,System.Single,System.Single,System.Single,System.Single)
  - TetraCreations.Core.QuaternionExtensions.EulerWith(Quaternion,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})
  - TetraCreations.Core.QuaternionExtensions.With(Quaternion,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})
  langs:
  - csharp
  - vb
  name: QuaternionExtensions
  nameWithType: QuaternionExtensions
  fullName: TetraCreations.Core.QuaternionExtensions
  type: Class
  source:
    id: QuaternionExtensions
    path: ''
    startLine: 37507
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  syntax:
    content: public static class QuaternionExtensions
    content.vb: Public Module QuaternionExtensions
  inheritance:
  - System.Object
- uid: TetraCreations.Core.QuaternionExtensions.With(Quaternion,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})
  commentId: M:TetraCreations.Core.QuaternionExtensions.With(Quaternion,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})
  id: With(Quaternion,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})
  isExtensionMethod: true
  parent: TetraCreations.Core.QuaternionExtensions
  langs:
  - csharp
  - vb
  name: With(Quaternion, float?, float?, float?, float?)
  nameWithType: QuaternionExtensions.With(Quaternion, float?, float?, float?, float?)
  fullName: TetraCreations.Core.QuaternionExtensions.With(Quaternion, float?, float?, float?, float?)
  type: Method
  source:
    id: With
    path: ''
    startLine: 37518
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nReturn a new Quaternion while changing any value in original Quaternion (x, y, z, w).\n"
  example: []
  syntax:
    content: public static Quaternion With(this Quaternion quaternion, float? x = null, float? y = null, float? z = null, float? w = null)
    parameters:
    - id: quaternion
      type: Global.Quaternion
      description: ''
    - id: x
      type: System.Nullable{System.Single}
      description: ''
    - id: y
      type: System.Nullable{System.Single}
      description: ''
    - id: z
      type: System.Nullable{System.Single}
      description: ''
    - id: w
      type: System.Nullable{System.Single}
      description: ''
    return:
      type: Global.Quaternion
      description: ''
    content.vb: Public Shared Function [With](quaternion As Quaternion, x As Single? = Nothing, y As Single? = Nothing, z As Single? = Nothing, w As Single? = Nothing) As Quaternion
  overload: TetraCreations.Core.QuaternionExtensions.With*
  nameWithType.vb: QuaternionExtensions.With(Quaternion, Single?, Single?, Single?, Single?)
  fullName.vb: TetraCreations.Core.QuaternionExtensions.With(Quaternion, Single?, Single?, Single?, Single?)
  name.vb: With(Quaternion, Single?, Single?, Single?, Single?)
- uid: TetraCreations.Core.QuaternionExtensions.Add(Quaternion,System.Single,System.Single,System.Single,System.Single)
  commentId: M:TetraCreations.Core.QuaternionExtensions.Add(Quaternion,System.Single,System.Single,System.Single,System.Single)
  id: Add(Quaternion,System.Single,System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: TetraCreations.Core.QuaternionExtensions
  langs:
  - csharp
  - vb
  name: Add(Quaternion, float, float, float, float)
  nameWithType: QuaternionExtensions.Add(Quaternion, float, float, float, float)
  fullName: TetraCreations.Core.QuaternionExtensions.Add(Quaternion, float, float, float, float)
  type: Method
  source:
    id: Add
    path: ''
    startLine: 37532
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nAdd any point to the value in original Quaternion (x, y, z, w).\n"
  example: []
  syntax:
    content: public static Quaternion Add(this Quaternion quaternion, float x = 0, float y = 0, float z = 0, float w = 0)
    parameters:
    - id: quaternion
      type: Global.Quaternion
      description: ''
    - id: x
      type: System.Single
      description: ''
    - id: y
      type: System.Single
      description: ''
    - id: z
      type: System.Single
      description: ''
    - id: w
      type: System.Single
      description: ''
    return:
      type: Global.Quaternion
      description: ''
    content.vb: Public Shared Function Add(quaternion As Quaternion, x As Single = 0, y As Single = 0, z As Single = 0, w As Single = 0) As Quaternion
  overload: TetraCreations.Core.QuaternionExtensions.Add*
  nameWithType.vb: QuaternionExtensions.Add(Quaternion, Single, Single, Single, Single)
  fullName.vb: TetraCreations.Core.QuaternionExtensions.Add(Quaternion, Single, Single, Single, Single)
  name.vb: Add(Quaternion, Single, Single, Single, Single)
- uid: TetraCreations.Core.QuaternionExtensions.EulerWith(Quaternion,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})
  commentId: M:TetraCreations.Core.QuaternionExtensions.EulerWith(Quaternion,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})
  id: EulerWith(Quaternion,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})
  isExtensionMethod: true
  parent: TetraCreations.Core.QuaternionExtensions
  langs:
  - csharp
  - vb
  name: EulerWith(Quaternion, float?, float?, float?)
  nameWithType: QuaternionExtensions.EulerWith(Quaternion, float?, float?, float?)
  fullName: TetraCreations.Core.QuaternionExtensions.EulerWith(Quaternion, float?, float?, float?)
  type: Method
  source:
    id: EulerWith
    path: ''
    startLine: 37546
  assemblies:
  - cs.temp.dll
  namespace: TetraCreations.Core
  summary: "\nReturns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis; applied in that order.<br />\nIdentical to Quaternion.Euler however we can specify which axes to rotate.\n"
  example: []
  syntax:
    content: public static Quaternion EulerWith(this Quaternion quaternion, float? x = null, float? y = null, float? z = null)
    parameters:
    - id: quaternion
      type: Global.Quaternion
      description: ''
    - id: x
      type: System.Nullable{System.Single}
      description: ''
    - id: y
      type: System.Nullable{System.Single}
      description: ''
    - id: z
      type: System.Nullable{System.Single}
      description: ''
    return:
      type: Global.Quaternion
      description: ''
    content.vb: Public Shared Function EulerWith(quaternion As Quaternion, x As Single? = Nothing, y As Single? = Nothing, z As Single? = Nothing) As Quaternion
  overload: TetraCreations.Core.QuaternionExtensions.EulerWith*
  nameWithType.vb: QuaternionExtensions.EulerWith(Quaternion, Single?, Single?, Single?)
  fullName.vb: TetraCreations.Core.QuaternionExtensions.EulerWith(Quaternion, Single?, Single?, Single?)
  name.vb: EulerWith(Quaternion, Single?, Single?, Single?)
references:
- uid: TetraCreations.Core
  commentId: N:TetraCreations.Core
  name: TetraCreations.Core
  nameWithType: TetraCreations.Core
  fullName: TetraCreations.Core
  spec.csharp:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
  spec.vb:
  - uid: TetraCreations
    name: TetraCreations
  - name: .
  - uid: TetraCreations.Core
    name: Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TetraCreations.Core.QuaternionExtensions.With*
  commentId: Overload:TetraCreations.Core.QuaternionExtensions.With
  name: With
  nameWithType: QuaternionExtensions.With
  fullName: TetraCreations.Core.QuaternionExtensions.With
- uid: Global.Quaternion
  isExternal: true
  name: Quaternion
  nameWithType: Quaternion
  fullName: Quaternion
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  name: float?
  nameWithType: float?
  fullName: float?
  nameWithType.vb: Single?
  fullName.vb: Single?
  name.vb: Single?
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TetraCreations.Core.QuaternionExtensions.Add*
  commentId: Overload:TetraCreations.Core.QuaternionExtensions.Add
  name: Add
  nameWithType: QuaternionExtensions.Add
  fullName: TetraCreations.Core.QuaternionExtensions.Add
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TetraCreations.Core.QuaternionExtensions.EulerWith*
  commentId: Overload:TetraCreations.Core.QuaternionExtensions.EulerWith
  name: EulerWith
  nameWithType: QuaternionExtensions.EulerWith
  fullName: TetraCreations.Core.QuaternionExtensions.EulerWith
